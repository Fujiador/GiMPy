This is pdfTeX, Version 3.1415926-2.3-1.40.12 (MiKTeX 2.9 64-bit) (preloaded format=latex 2012.12.30)  28 MAR 2014 13:23
entering extended mode
**api.tex
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.tex
LaTeX2e <2011/06/27>
Babel <v3.8m> and hyphenation patterns for english, afrikaans, ancientgreek, ar
abic, armenian, assamese, basque, bengali, bokmal, bulgarian, catalan, coptic, 
croatian, czech, danish, dutch, esperanto, estonian, farsi, finnish, french, ga
lician, german, german-x-2009-06-19, greek, gujarati, hindi, hungarian, iceland
ic, indonesian, interlingua, irish, italian, kannada, kurmanji, lao, latin, lat
vian, lithuanian, malayalam, marathi, mongolian, mongolianlmc, monogreek, ngerm
an, ngerman-x-2009-06-19, nynorsk, oriya, panjabi, pinyin, polish, portuguese, 
romanian, russian, sanskrit, serbian, slovak, slovenian, spanish, swedish, swis
sgerman, tamil, telugu, turkish, turkmen, ukenglish, ukrainian, uppersorbian, u
senglishmax, welsh, loaded.
("C:\Program Files\MiKTeX 2.9\tex\latex\base\article.cls"
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
("C:\Program Files\MiKTeX 2.9\tex\latex\base\size10.clo"
File: size10.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
("C:\Program Files\MiKTeX 2.9\tex\latex\base\alltt.sty"
Package: alltt 1997/06/16 v2.0g defines alltt environment
)
("C:\Program Files\MiKTeX 2.9\tex\latex\ltxmisc\parskip.sty"
Package: parskip 2001/04/09 non-zero parskip adjustments
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\fancyhdr\fancyhdr.sty
\fancy@headwidth=\skip43
\f@ncyO@elh=\skip44
\f@ncyO@erh=\skip45
\f@ncyO@olh=\skip46
\f@ncyO@orh=\skip47
\f@ncyO@elf=\skip48
\f@ncyO@erf=\skip49
\f@ncyO@olf=\skip50
\f@ncyO@orf=\skip51
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\boxedminipage\boxedminipage
.sty) ("C:\Program Files\MiKTeX 2.9\tex\latex\base\makeidx.sty"
Package: makeidx 2000/03/29 v1.0m Standard LaTeX package
)
("C:\Program Files\MiKTeX 2.9\tex\latex\multirow\multirow.sty"
\bigstrutjot=\dimen103
)
("C:\Program Files\MiKTeX 2.9\tex\latex\tools\longtable.sty"
Package: longtable 2004/02/01 v4.11 Multi-page Table package (DPC)
\LTleft=\skip52
\LTright=\skip53
\LTpre=\skip54
\LTpost=\skip55
\LTchunksize=\count87
\LTcapwidth=\dimen104
\LT@head=\box26
\LT@firsthead=\box27
\LT@foot=\box28
\LT@lastfoot=\box29
\LT@cols=\count88
\LT@rows=\count89
\c@LT@tables=\count90
\c@LT@chunks=\count91
\LT@p@ftn=\toks14
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\tocbibind\tocbibind.sty
Package: tocbibind 2010/10/13 v1.5k extra ToC listings
Package tocbibind Info: The document has section divisions on input line 50.


Package tocbibind Note: Using section or other style headings.

) ("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\amssymb.sty"
Package: amssymb 2009/06/22 v3.00

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\amsfonts.sty"
Package: amsfonts 2009/06/22 v3.00 Basic AMSFonts support
\@emptytoks=\toks15
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 96.
))
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\preprint\fullpage.sty
Package: fullpage 1999/02/23 1.1 (PWD)
\FP@margin=\skip56
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\color.sty"
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

("C:\Program Files\MiKTeX 2.9\tex\latex\00miktex\color.cfg"
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: dvips.def on input line 130.

("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\dvips.def"
File: dvips.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\dvipsnam.def"
File: dvipsnam.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
))
\BCL=\skip57
Package color Info: Redefining color py@inputcolour on input line 35.
\funcindent=\skip58
\funcwidth=\skip59
\varindent=\skip60
\varnamewidth=\skip61
\vardescrwidth=\skip62
\varwidth=\skip63

("C:\Program Files\MiKTeX 2.9\tex\latex\base\inputenc.sty"
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks16
\inpenc@posthook=\toks17

("C:\Program Files\MiKTeX 2.9\tex\latex\base\utf8.def"
File: utf8.def 2008/04/05 v1.1m UTF-8 support for inputenc
Now handling font encoding OML ...
... no UTF-8 mapping file for font encoding OML
Now handling font encoding T1 ...
... processing UTF-8 mapping file for font encoding T1

("C:\Program Files\MiKTeX 2.9\tex\latex\base\t1enc.dfu"
File: t1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00AB (decimal 171)
   defining Unicode char U+00BB (decimal 187)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C0 (decimal 192)
   defining Unicode char U+00C1 (decimal 193)
   defining Unicode char U+00C2 (decimal 194)
   defining Unicode char U+00C3 (decimal 195)
   defining Unicode char U+00C4 (decimal 196)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00C7 (decimal 199)
   defining Unicode char U+00C8 (decimal 200)
   defining Unicode char U+00C9 (decimal 201)
   defining Unicode char U+00CA (decimal 202)
   defining Unicode char U+00CB (decimal 203)
   defining Unicode char U+00CC (decimal 204)
   defining Unicode char U+00CD (decimal 205)
   defining Unicode char U+00CE (decimal 206)
   defining Unicode char U+00CF (decimal 207)
   defining Unicode char U+00D0 (decimal 208)
   defining Unicode char U+00D1 (decimal 209)
   defining Unicode char U+00D2 (decimal 210)
   defining Unicode char U+00D3 (decimal 211)
   defining Unicode char U+00D4 (decimal 212)
   defining Unicode char U+00D5 (decimal 213)
   defining Unicode char U+00D6 (decimal 214)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00D9 (decimal 217)
   defining Unicode char U+00DA (decimal 218)
   defining Unicode char U+00DB (decimal 219)
   defining Unicode char U+00DC (decimal 220)
   defining Unicode char U+00DD (decimal 221)
   defining Unicode char U+00DE (decimal 222)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E0 (decimal 224)
   defining Unicode char U+00E1 (decimal 225)
   defining Unicode char U+00E2 (decimal 226)
   defining Unicode char U+00E3 (decimal 227)
   defining Unicode char U+00E4 (decimal 228)
   defining Unicode char U+00E5 (decimal 229)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00E7 (decimal 231)
   defining Unicode char U+00E8 (decimal 232)
   defining Unicode char U+00E9 (decimal 233)
   defining Unicode char U+00EA (decimal 234)
   defining Unicode char U+00EB (decimal 235)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F0 (decimal 240)
   defining Unicode char U+00F1 (decimal 241)
   defining Unicode char U+00F2 (decimal 242)
   defining Unicode char U+00F3 (decimal 243)
   defining Unicode char U+00F4 (decimal 244)
   defining Unicode char U+00F5 (decimal 245)
   defining Unicode char U+00F6 (decimal 246)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+00F9 (decimal 249)
   defining Unicode char U+00FA (decimal 250)
   defining Unicode char U+00FB (decimal 251)
   defining Unicode char U+00FC (decimal 252)
   defining Unicode char U+00FD (decimal 253)
   defining Unicode char U+00FE (decimal 254)
   defining Unicode char U+00FF (decimal 255)
   defining Unicode char U+0102 (decimal 258)
   defining Unicode char U+0103 (decimal 259)
   defining Unicode char U+0104 (decimal 260)
   defining Unicode char U+0105 (decimal 261)
   defining Unicode char U+0106 (decimal 262)
   defining Unicode char U+0107 (decimal 263)
   defining Unicode char U+010C (decimal 268)
   defining Unicode char U+010D (decimal 269)
   defining Unicode char U+010E (decimal 270)
   defining Unicode char U+010F (decimal 271)
   defining Unicode char U+0110 (decimal 272)
   defining Unicode char U+0111 (decimal 273)
   defining Unicode char U+0118 (decimal 280)
   defining Unicode char U+0119 (decimal 281)
   defining Unicode char U+011A (decimal 282)
   defining Unicode char U+011B (decimal 283)
   defining Unicode char U+011E (decimal 286)
   defining Unicode char U+011F (decimal 287)
   defining Unicode char U+0130 (decimal 304)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0132 (decimal 306)
   defining Unicode char U+0133 (decimal 307)
   defining Unicode char U+0139 (decimal 313)
   defining Unicode char U+013A (decimal 314)
   defining Unicode char U+013D (decimal 317)
   defining Unicode char U+013E (decimal 318)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0143 (decimal 323)
   defining Unicode char U+0144 (decimal 324)
   defining Unicode char U+0147 (decimal 327)
   defining Unicode char U+0148 (decimal 328)
   defining Unicode char U+014A (decimal 330)
   defining Unicode char U+014B (decimal 331)
   defining Unicode char U+0150 (decimal 336)
   defining Unicode char U+0151 (decimal 337)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+0154 (decimal 340)
   defining Unicode char U+0155 (decimal 341)
   defining Unicode char U+0158 (decimal 344)
   defining Unicode char U+0159 (decimal 345)
   defining Unicode char U+015A (decimal 346)
   defining Unicode char U+015B (decimal 347)
   defining Unicode char U+015E (decimal 350)
   defining Unicode char U+015F (decimal 351)
   defining Unicode char U+0160 (decimal 352)
   defining Unicode char U+0161 (decimal 353)
   defining Unicode char U+0162 (decimal 354)
   defining Unicode char U+0163 (decimal 355)
   defining Unicode char U+0164 (decimal 356)
   defining Unicode char U+0165 (decimal 357)
   defining Unicode char U+016E (decimal 366)
   defining Unicode char U+016F (decimal 367)
   defining Unicode char U+0170 (decimal 368)
   defining Unicode char U+0171 (decimal 369)
   defining Unicode char U+0178 (decimal 376)
   defining Unicode char U+0179 (decimal 377)
   defining Unicode char U+017A (decimal 378)
   defining Unicode char U+017B (decimal 379)
   defining Unicode char U+017C (decimal 380)
   defining Unicode char U+017D (decimal 381)
   defining Unicode char U+017E (decimal 382)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201A (decimal 8218)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
   defining Unicode char U+201E (decimal 8222)
   defining Unicode char U+2030 (decimal 8240)
   defining Unicode char U+2031 (decimal 8241)
   defining Unicode char U+2039 (decimal 8249)
   defining Unicode char U+203A (decimal 8250)
   defining Unicode char U+2423 (decimal 9251)
)
Now handling font encoding OT1 ...
... processing UTF-8 mapping file for font encoding OT1

("C:\Program Files\MiKTeX 2.9\tex\latex\base\ot1enc.dfu"
File: ot1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00B8 (decimal 184)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
)
Now handling font encoding OMS ...
... processing UTF-8 mapping file for font encoding OMS

("C:\Program Files\MiKTeX 2.9\tex\latex\base\omsenc.dfu"
File: omsenc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A7 (decimal 167)
   defining Unicode char U+00B6 (decimal 182)
   defining Unicode char U+00B7 (decimal 183)
   defining Unicode char U+2020 (decimal 8224)
   defining Unicode char U+2021 (decimal 8225)
   defining Unicode char U+2022 (decimal 8226)
)
Now handling font encoding OMX ...
... no UTF-8 mapping file for font encoding OMX
Now handling font encoding U ...
... no UTF-8 mapping file for font encoding U
   defining Unicode char U+00A9 (decimal 169)
   defining Unicode char U+00AA (decimal 170)
   defining Unicode char U+00AE (decimal 174)
   defining Unicode char U+00BA (decimal 186)
   defining Unicode char U+02C6 (decimal 710)
   defining Unicode char U+02DC (decimal 732)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2026 (decimal 8230)
   defining Unicode char U+2122 (decimal 8482)
   defining Unicode char U+2423 (decimal 9251)
))
("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\hyperref.sty"
Package: hyperref 2012/05/13 v6.82q Hypertext links for LaTeX

("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\hobsub-hyperref.sty"
Package: hobsub-hyperref 2012/04/25 v1.12 Bundle oberdiek, subset hyperref (HO)


("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\hobsub-generic.sty"
Package: hobsub-generic 2012/04/25 v1.12 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/04/25 v1.12 Construct package bundles (HO)
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is not detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode is ignored in DVI mode.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2011/06/24 v1.1 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\keyval.sty"
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks18
)
("C:\Program Files\MiKTeX 2.9\tex\generic\ifxetex\ifxetex.sty"
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
("C:\Program Files\MiKTeX 2.9\tex\latex\oberdiek\kvoptions.sty"
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen105
\Hy@linkcounter=\count92
\Hy@pagecounter=\count93

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\pd1enc.def"
File: pd1enc.def 2012/05/13 v6.82q Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
\Hy@SavedSpaceFactor=\count94

("C:\Program Files\MiKTeX 2.9\tex\latex\00miktex\hyperref.cfg"
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `bookmarks' set `true' on input line 3941.
Package hyperref Info: Option `bookmarksopen' set `false' on input line 3941.
Package hyperref Info: Option `colorlinks' set `true' on input line 3941.


Package hyperref Warning: Option `pagecolor' is not available anymore.

Package hyperref Info: Hyper figures OFF on input line 4062.
Package hyperref Info: Link nesting OFF on input line 4067.
Package hyperref Info: Hyper index ON on input line 4070.
Package hyperref Info: Plain pages OFF on input line 4077.
Package hyperref Info: Backreferencing ON on input line 4080.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4300.
("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\backref.sty"
Package: backref 2010/08/30 v1.36 Bibliographical back referencing

("C:\Program Files\MiKTeX 2.9\tex\latex\oberdiek\rerunfilecheck.sty"
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
))
\c@Hy@tempcnt=\count95

("C:\Program Files\MiKTeX 2.9\tex\latex\ltxmisc\url.sty"
\Urlmuskip=\muskip10
Package: url 2006/04/12  ver 3.3  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 4653.
\Fld@menulength=\count96
\Field@Width=\dimen106
\Fld@charsize=\dimen107
Package hyperref Info: Hyper figures OFF on input line 5773.
Package hyperref Info: Link nesting OFF on input line 5778.
Package hyperref Info: Hyper index ON on input line 5781.
Package hyperref Info: backreferencing ON on input line 5786.
Package hyperref Info: Link coloring ON on input line 5791.
Package hyperref Info: Link coloring with OCG OFF on input line 5798.
Package hyperref Info: PDF/A mode OFF on input line 5803.
LaTeX Info: Redefining \ref on input line 5843.
LaTeX Info: Redefining \pageref on input line 5847.
\Hy@abspage=\count97
\c@Item=\count98
\c@Hfootnote=\count99
)

Package hyperref Message: Driver: hdvips.

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\hdvips.def"
File: hdvips.def 2012/05/13 v6.82q Hyperref driver for dvips

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\pdfmark.def"
File: pdfmark.def 2012/05/13 v6.82q Hyperref definitions for pdfmark specials
\pdf@docset=\toks19
\pdf@box=\box30
\pdf@toks=\toks20
\pdf@defaulttoks=\toks21
\Fld@listcount=\count100
\c@bookmark@seq@number=\count101
\Hy@SectionHShift=\skip64
))
\@indexfile=\write3

Writing index file api.idx
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.aux
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.au
x) (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.aux))
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
\AtBeginShipoutBox=\box31
Package hyperref Info: Link coloring ON on input line 80.

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\nameref.sty"
Package: nameref 2010/04/30 v2.40 Cross-referencing by name of section

("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\gettitlestring.sty"
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count102
)
LaTeX Info: Redefining \ref on input line 80.
LaTeX Info: Redefining \pageref on input line 80.
LaTeX Info: Redefining \nameref on input line 80.

(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.out)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.out)
\@outlinefile=\write4
LaTeX Font Info:    Try loading font information for U+msa on input line 95.

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\umsa.fd"
File: umsa.fd 2009/06/22 v3.00 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 95.

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\umsb.fd"
File: umsb.fd 2009/06/22 v3.00 AMS symbols B
)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.toc)
\tf@toc=\write5
 [1

]
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.tex
LaTeX Font Info:    Try loading font information for OMS+cmr on input line 26.

("C:\Program Files\MiKTeX 2.9\tex\latex\base\omscmr.fd"
File: omscmr.fd 1999/05/25 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 26.
LaTeX Font Info:    Try loading font information for OMS+cmtt on input line 63.

LaTeX Font Info:    No file OMScmtt.fd. on input line 63.


LaTeX Font Warning: Font shape `OMS/cmtt/m/n' undefined
(Font)              using `OMS/cmsy/m/n' instead
(Font)              for symbol `textbraceleft' on input line 63.


Overfull \hbox (66.27612pt too wide) in paragraph at lines 77--78
\OT1/cmtt/m/n/10 '\OMS/cmtt/m/n/10 n\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/c
mtt/m/n/10 documentclass[landscape]\OMS/cmtt/m/n/10 f\OT1/cmtt/m/n/10 article\O
MS/cmtt/m/n/10 gn\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/cmtt/m/n/10 usepacka
ge[x11n...|  
 []

LaTeX Font Info:    Try loading font information for OML+cmtt on input line 87.

LaTeX Font Info:    No file OMLcmtt.fd. on input line 87.

LaTeX Font Warning: Font shape `OML/cmtt/m/n' undefined
(Font)              using `OML/cmm/m/it' instead
(Font)              for symbol `textgreater' on input line 87.


Overfull \hbox (63.86563pt too wide) in paragraph at lines 98--99
\OT1/cmtt/m/n/10 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[2

]) [3]
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.te
x
Overfull \hbox (66.27612pt too wide) in paragraph at lines 121--122
\OT1/cmtt/m/n/10 '\OMS/cmtt/m/n/10 n\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/c
mtt/m/n/10 documentclass[landscape]\OMS/cmtt/m/n/10 f\OT1/cmtt/m/n/10 article\O
MS/cmtt/m/n/10 gn\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/cmtt/m/n/10 usepacka
ge[x11n...|  
 []


Overfull \hbox (63.86563pt too wide) in paragraph at lines 130--131
\OT1/cmtt/m/n/10 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[4


]
Overfull \hbox (38.26202pt too wide) in paragraph at lines 246--276
[] 
 []

[5]) [6] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.tex
Overfull \hbox (5.72021pt too wide) in paragraph at lines 41--41
[]\OT1/cmtt/m/n/12 undirected graph. She should be aware of this. Python will r
aise an exception[] 
 []


Overfull \hbox (18.07022pt too wide) in paragraph at lines 47--47
[]\OT1/cmtt/m/n/12 get visualization of algorithm without changing global displ
ay behavior of your[] 
 []

[7


]
Overfull \hbox (122.37866pt too wide) in paragraph at lines 135--136
\OT1/cmtt/m/n/12 '\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/c
mtt/m/n/12 documentclass[landscape]\OMS/cmtt/m/n/12 f\OT1/cmtt/m/n/12 article\O
MS/cmtt/m/n/12 gn\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/cmtt/m/n/12 usepacka
ge[x11n...|  
 []


Overfull \hbox (21.52051pt too wide) in paragraph at lines 150--151
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],]*$')|  
 []


Overfull \hbox (118.59155pt too wide) in paragraph at lines 153--154
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[8]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 260--260
[]    \OT1/cmtt/m/n/12 Returns Node attribute attr if exists returns None, othe
rwise.[] 
 []

[9] [10]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 347--348
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []


Overfull \hbox (23.54265pt too wide) in paragraph at lines 422--422
[]    \OT1/cmtt/m/n/12 self.neighbors, self.in[]neighbors, self.nodes, self.out
[]neighbors,[] 
 []

[11]
Overfull \hbox (6.74664pt too wide) in paragraph at lines 482--482
[]    \OT1/cmtt/m/n/12 self.neighbors, self.nodes and self.in[]neighbors are up
dated if[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 508--508
[]    \OT1/cmtt/m/n/12 Graph should not contain a node with this name. We do no
t allow[] 
 []

[12]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 576--576
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []

[13]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 632--632
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []


Overfull \hbox (19.09665pt too wide) in paragraph at lines 661--661
[]    \OT1/cmtt/m/n/12 cluster[]attrs: Dictionary of cluster attributes, see Do
t language[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 666--666
[]    \OT1/cmtt/m/n/12 A cluster will be created. Attributes of the nodes in th
e cluster[] 
 []

[14]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 720--720
[]    \OT1/cmtt/m/n/12 Solves minimum cost feasible flow problem using cycle ca
nceling[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 721--721
[]    \OT1/cmtt/m/n/12 algorithm. Returns True when an optimal solution is foun
d, returns[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 728--728
[]    \OT1/cmtt/m/n/12 (2) Nodes should have 'demand' attribute, this value sho
uld be[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 729--729
[]    \OT1/cmtt/m/n/12 positive if the node is a supply node, negative if it is
 demand[] 
 []

[15]
Overfull \hbox (17.36765pt too wide) in paragraph at lines 765--765
[]    \OT1/cmtt/m/n/12 self.edge[]attr, self.neighbors and self.in[]neighbors a
re updated.[] 
 []

[16]
Overfull \hbox (23.54265pt too wide) in paragraph at lines 815--815
[]\OT1/cmtt/m/n/12 API: dfs(self, root, disc[]count = 0, finish[]count = 1, com
ponent=None,[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 824--824
[]    \OT1/cmtt/m/n/12 transpose: Goes in the reverse direction along edges if 
transpose[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 827--827
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (17.36765pt too wide) in paragraph at lines 828--828
[]    \OT1/cmtt/m/n/12 number as value. Updates 'disc[]time' and 'finish[]time'
 attributes[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 831--831
[]    \OT1/cmtt/m/n/12 Returns a tuple that has discovery time and finish time 
of the[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 854--854
[]    \OT1/cmtt/m/n/12 display(self, highlight = None, basename = 'graph', form
at = 'png',[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 858--858
[]    \OT1/cmtt/m/n/12 Current display modes: 'off', 'file', 'pygame', 'PIL', '
xdot',[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 860--860
[]    \OT1/cmtt/m/n/12 Current layout modes: Layouts provided by graphviz ('dot
', 'fdp',[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 862--862
[]    \OT1/cmtt/m/n/12 Current formats: Formats provided by graphviz ('ps', 'pd
f', 'png',[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 866--866
[]    \OT1/cmtt/m/n/12 basename: File name. It will be used if display mode is 
'file'.[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 867--867
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 868--868
[]    \OT1/cmtt/m/n/12 pause: If display is 'pygame' and pause is True pygame w
ill pause[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 869--869
[]    \OT1/cmtt/m/n/12 and wait for user input before closing the display. It w
ill close[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 872--872
[]    \OT1/cmtt/m/n/12 A display window will pop up or a file will be written d
epending[] 
 []

[17]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 927--927
[]    \OT1/cmtt/m/n/12 predecessor dictionary. If graph has a negative cycle, d
etects it[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 930--930
[]    \OT1/cmtt/m/n/12 (1) 'cost' attribute of arcs. It will be used to compute
 shortest[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 937--937
[]    \OT1/cmtt/m/n/12 If there is no negative cycle returns to (True, pred), o
therwise[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 938--938
[]    \OT1/cmtt/m/n/12 returns to (False, cycle) where pred is the predecessor 
dictionary[] 
 []

[18]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 994--994
[]    \OT1/cmtt/m/n/12 Solves feasible flow problem, stores solution in 'flow' 
attribute[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 995--995
[]    \OT1/cmtt/m/n/12 or arcs. This method is used to get an initial feasible 
flow for[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 996--996
[]    \OT1/cmtt/m/n/12 simplex and cycle canceling algorithms. Uses max[]flow()
 method.[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 997--997
[]    \OT1/cmtt/m/n/12 Other max flow methods can also be used. Returns True if
 a feasible[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 998--998
[]    \OT1/cmtt/m/n/12 flow is found, returns False, if the problem is infeasib
le. When[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1007--1007
[]    \OT1/cmtt/m/n/12 Returns True if a feasible flow is found, returns False,
 if the[] 
 []

[19]
Overfull \hbox (156.67572pt too wide) in paragraph at lines 1032--1032
[]    \OT1/cmtt/m/n/12 Returns an approximation of the diameter of the graph, w
hich is accurate in many cases.[] 
 []


Overfull \hbox (33.63869pt too wide) in paragraph at lines 1036--1036
[]    \OT1/cmtt/m/n/12 diameter = $\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n e
ccentricity(n) = \OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n \OMS/cmtt/m/n/12 n\
OT1/cmtt/m/n/12 max []m distance(n,m)$[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1064--1064
[]    \OT1/cmtt/m/n/12 Returns a dictionary of node degrees. Keys are node name
s, values[] 
 []

[20]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1089--1089
[]    \OT1/cmtt/m/n/12 Returns diameter of the graph. Diameter is defined as fo
llows.[] 
 []


Overfull \hbox (33.63869pt too wide) in paragraph at lines 1092--1092
[]    \OT1/cmtt/m/n/12 diameter = $\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n e
ccentricity(n) = \OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n \OMS/cmtt/m/n/12 n\
OT1/cmtt/m/n/12 max []m distance(n,m)$[] 
 []


Overfull \hbox (34.16365pt too wide) in paragraph at lines 1148--1148
[]\OT1/cmtt/m/n/12 Returns cost attr of edge, required for minimum[]spanning[]t
ree[]kruskal().[] 
 []

[21] [22]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 1281--1281
[]    \OT1/cmtt/m/n/12 Finds and returns negative cost cycle using 'cost' attri
bute of[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1282--1282
[]    \OT1/cmtt/m/n/12 arcs. Return value is a list of nodes representing cycle
 it is in[] 
 []


Overfull \hbox (9.46364pt too wide) in paragraph at lines 1283--1283
[]    \OT1/cmtt/m/n/12 the following form; n[]1-n[]2-...-n[]k, when the cycle h
as k nodes.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1287--1287
[]    \OT1/cmtt/m/n/12 Returns a list of nodes in the cycle if a negative cycle
 exists,[] 
 []

[23] [24]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 1477--1477
[]    \OT1/cmtt/m/n/12 Assumes a feasible flow solution stored in 'flow' attrib
ute's of[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1478--1478
[]    \OT1/cmtt/m/n/12 arcs. Returns the graph with arcs that have flow between
 0 and[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1508--1508
[]\OT1/cmtt/m/n/12 This method labels the nodes of an undirected graph with com
ponent[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1510--1510
[]\OT1/cmtt/m/n/12 same component. It will display the algortihm if display arg
ument is[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1517--1517
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []

[25]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 1542--1542
[]    \OT1/cmtt/m/n/12 Checks if predecessor dictionary has a cycle, j represen
ts the node[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1575--1575
[]    \OT1/cmtt/m/n/12 In label correcting check cycle it is decided pred has a
 cycle and[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1576--1576
[]    \OT1/cmtt/m/n/12 nodes in the cycle are labelled. We will create a list o
f nodes[] 
 []


Overfull \hbox (15.63864pt too wide) in paragraph at lines 1579--1579
[]    \OT1/cmtt/m/n/12 This method should be called from label[]correcting[]che
ck[]cycle(),[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1582--1582
[]    \OT1/cmtt/m/n/12 j: Node that predecessor is recently updated. We know th
at it is[] 
 []

[26]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1616--1616
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1640--1640
[]\OT1/cmtt/m/n/12 Finds maximum flow from source to sink by a depth-first sear
ch based[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1644--1644
[]    \OT1/cmtt/m/n/12 attribute and for which there does does not exist both a
rcs (i,j)[] 
 []

[27]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 1675--1675
[]\OT1/cmtt/m/n/12 Finds maximum flow from source to sink by a depth-first sear
ch based[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1679--1679
[]     \OT1/cmtt/m/n/12 attribute and for which there does does not exist both 
arcs (i,j)[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1711--1711
[]    \OT1/cmtt/m/n/12 Solves minimum cost flow problem using node/edge attribu
tes with[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1714--1714
[]    \OT1/cmtt/m/n/12 (1) Assumes a directed graph in which each arc has 'capa
city' and[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1716--1716
[]    \OT1/cmtt/m/n/12 (2) Nodes should have 'demand' attribute. This value sho
uld be[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1717--1717
[]    \OT1/cmtt/m/n/12 positive for supply and negative for demand, and 0 for t
ranshipment[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1720--1720
[]    \OT1/cmtt/m/n/12 (4) Assumes (i,j) and (j,i) does not exist together. Nee
ded when[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1721--1721
[]    \OT1/cmtt/m/n/12 solving max flow. (max flow problem is solved to get a f
easible[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1724--1724
[]    \OT1/cmtt/m/n/12 display: 'off' for no display, 'pygame' for live update 
of tree[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1726--1726
[]        \OT1/cmtt/m/n/12 display: display method, if not given current mode (
the one[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1728--1728
[]        \OT1/cmtt/m/n/12 algo: determines algorithm to use, can be one of the
 following[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 1732--1732
[]            \OT1/cmtt/m/n/12 see Network Flows by Ahuja et al. for details of
 algorithms.[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1733--1733
[]        \OT1/cmtt/m/n/12 pivot: valid if algo is 'simlex', determines pivotin
g rule for[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 1734--1734
[]            \OT1/cmtt/m/n/12 simplex, may be one of the following; 'first[]el
igible',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1738--1738
[]        \OT1/cmtt/m/n/12 root: valid if algo is 'simlex', specifies the root 
node for[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1739--1739
[]            \OT1/cmtt/m/n/12 simplex algorithm. It is name of the one of the 
nodes. It[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1743--1743
[]    \OT1/cmtt/m/n/12 'distance' attribute of the nodes are also changed durin
g max flow[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1751--1751
[]        \OT1/cmtt/m/n/12 solves minimum cost feasible flow problem using cycl
e canceling[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1754--1754
[]        \OT1/cmtt/m/n/12 solves minimum cost feasible flow problem using netw
ork simplex[] 
 []

[28]
Overfull \vbox (96.41997pt too high) has occurred while \output is active []


[29]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1816--1816
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1818--1818
[]    \OT1/cmtt/m/n/12 'color', 'distance', 'component' attribute of nodes and 
edges may[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1845--1845
[]    \OT1/cmtt/m/n/12 Solves minimum cost feasible flow problem using network 
simplex[] 
 []


Overfull \hbox (17.36765pt too wide) in paragraph at lines 1846--1846
[]    \OT1/cmtt/m/n/12 algorithm. It is recommended to use min[]cost[]flow(algo
='simplex')[] 
 []


Overfull \hbox (19.09665pt too wide) in paragraph at lines 1847--1847
[]    \OT1/cmtt/m/n/12 instead of using network[]simplex() directly. Returns Tr
ue when an[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 1848--1848
[]    \OT1/cmtt/m/n/12 optimal solution is found, returns False otherwise. 'flo
w' attribute[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1849--1849
[]    \OT1/cmtt/m/n/12 values of arcs should be considered as junk when returne
d False.[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1856--1856
[]    \OT1/cmtt/m/n/12 root: Root node for the underlying spanning trees that w
ill be[] 
 []

[30]
Overfull \hbox (27.00066pt too wide) in paragraph at lines 1888--1888
[]    \OT1/cmtt/m/n/12 This function was originally taken from here and modifie
d for this[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1889--1889
[]    \OT1/cmtt/m/n/12 graph class: http://code.google.com/p/python-graph/sourc
e/browse/[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 1894--1894
[]    \OT1/cmtt/m/n/12 min[]delta: Smallest variation required to have a new it
eration.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1898--1898
[]    \OT1/cmtt/m/n/12 Returns dictionary of page-ranks. Keys are node names, v
alues are[] 
 []

[31]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 1923--1923
[]    \OT1/cmtt/m/n/12 Prints all positive flows to stdout. This method can be 
used for[] 
 []


Overfull \hbox (29.71765pt too wide) in paragraph at lines 1945--1945
[]\OT1/cmtt/m/n/12 API: process[]edge[]dijkstra(self, current, neighbor, pred, 
q, component)[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1947--1947
[]\OT1/cmtt/m/n/12 Used by search() method if the algo argument is 'Dijkstra'. 
Processes[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1954--1954
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []

[32]
Overfull \hbox (5.01764pt too wide) in paragraph at lines 2011--2011
[]\OT1/cmtt/m/n/12 API: process[]edge[]prim(self, current, neighbor, pred, q, c
omponent)[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2014--2014
[]\OT1/cmtt/m/n/12 edges along Prim's algorithm. User does not need to call thi
s method[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2020--2020
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []

[33]
Overfull \hbox (17.36765pt too wide) in paragraph at lines 2044--2044
[]\OT1/cmtt/m/n/12 API: process[]edge[]search(self, current, neighbor, pred, q,
 component,[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2047--2047
[]\OT1/cmtt/m/n/12 Used by search() method. Processes edges according to the un
derlying[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2053--2053
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2058--2058
[]    \OT1/cmtt/m/n/12 'color', 'distance', 'component' attribute of nodes and 
edges may[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2082--2082
[]\OT1/cmtt/m/n/12 Used by search() method. Process nodes along the search. Sho
uld not be[] 
 []

[34]
Overfull \hbox (42.06766pt too wide) in paragraph at lines 2111--2111
[]    \OT1/cmtt/m/n/12 random(self, numnodes = 10, degree[]range = None, length
[]range = None,[] 
 []


Overfull \hbox (31.44666pt too wide) in paragraph at lines 2118--2118
[]    \OT1/cmtt/m/n/12 degree[]range: A tuple that has lower and upper bounds o
f degree for[] 
 []


Overfull \hbox (12.92165pt too wide) in paragraph at lines 2120--2120
[]    \OT1/cmtt/m/n/12 length[]range: A tuple that has lower and upper bounds f
or 'cost'[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2124--2124
[]    \OT1/cmtt/m/n/12 edge[]format: Dictionary that specifies attribute values
 for edges.[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2125--2125
[]    \OT1/cmtt/m/n/12 node[]format: Dictionary that specifies attribute values
 for nodes.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2126--2126
[]    \OT1/cmtt/m/n/12 Euclidean: Creates an Euclidean graph (Euclidean distanc
e between[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2128--2128
[]    \OT1/cmtt/m/n/12 seedInput: Seed that will be used for random number gene
ration.[] 
 []

[35]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 2187--2187
[]   \OT1/cmtt/m/n/12 This method determines all nodes reachable from "source" 
ie. creates[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2190--2190
[]   \OT1/cmtt/m/n/12 If there exists a path from "source" to "destination" it 
will return[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2191--2191
[]   \OT1/cmtt/m/n/12 list of the nodes is this path. If there is no such path,
 it will[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2192--2192
[]   \OT1/cmtt/m/n/12 return the precedence tree constructed from source (dicti
onary).[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2193--2193
[]\OT1/cmtt/m/n/12 Optionally, it marks all nodes reachable from "source" with 
a component[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2194--2194
[]\OT1/cmtt/m/n/12 number. The variable "q" determines the order in which the n
odes are[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2200--2200
[]    \OT1/cmtt/m/n/12 algo: Algortihm that specifies search. Available algorti
hms are[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2205--2205
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2206--2206
[]    \OT1/cmtt/m/n/12 number as value (if component argument provided). Color 
attribute[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2210--2210
[]    \OT1/cmtt/m/n/12 not specified, returns list of node names in the path fr
om source[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2211--2211
[]    \OT1/cmtt/m/n/12 to destionation if destionation is specified and there i
s a path.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2212--2212
[]    \OT1/cmtt/m/n/12 If there is no path returns predecessor tree in dictiona
ry form.[] 
 []

[36] [37] [38]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 2408--2408
[]    \OT1/cmtt/m/n/12 Computes node potentials for a minimum cost flow problem
 and stores[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2409--2409
[]    \OT1/cmtt/m/n/12 them as node attribute 'potential'. Based on pseudocode 
given in[] 
 []

[39]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 2443--2443
[]    \OT1/cmtt/m/n/12 At this point we assume that the solution does not have 
a cycle.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2444--2444
[]    \OT1/cmtt/m/n/12 We check if all the nodes are connected, if not we add a
n arc to[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2445--2445
[]    \OT1/cmtt/m/n/12 solution[]g that does not create a cycle and return True
. Otherwise[] 
 []


Overfull \hbox (19.09665pt too wide) in paragraph at lines 2452--2452
[]    \OT1/cmtt/m/n/12 (1) solution[]g is updated. An arc that does not create 
a cycle is[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2486--2486
[]    \OT1/cmtt/m/n/12 Returns the tuple that represents leaving arc, capacity 
of the[] 
 []

[40]
Overfull \hbox (27.00066pt too wide) in paragraph at lines 2511--2511
[]    \OT1/cmtt/m/n/12 Returns a cycle (list of nodes) if the graph has one, re
turns None[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2512--2512
[]    \OT1/cmtt/m/n/12 otherwise. Uses DFS. During DFS checks existence of arcs
 to lower[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2513--2513
[]    \OT1/cmtt/m/n/12 depth regions. Note that direction of the arcs are not i
mportant.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2515--2515
[]    \OT1/cmtt/m/n/12 Returns list of nodes that represents cycle. Returns Non
e if the[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2540--2540
[]    \OT1/cmtt/m/n/12 Assumes a feasible flow solution stored in 'flow' attrib
ute's of[] 
 []

[41] [42]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 2696--2696
[]    \OT1/cmtt/m/n/12 Checks if the current solution is optimal, if yes return
s True,[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2728--2728
[]    \OT1/cmtt/m/n/12 Returns a new graph instance that is same as self but ad
ds nodes[] 
 []

[43]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 2793--2793
[]    \OT1/cmtt/m/n/12 Searches graph starting from source. Its difference from
 usual[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2794--2794
[]    \OT1/cmtt/m/n/12 search is we can also go backwards along an arc. When th
e graph[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2796--2796
[]    \OT1/cmtt/m/n/12 indexes and stores them as node attributes. These values
 should be[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2802--2802
[]    \OT1/cmtt/m/n/12 (1) Sets the component number of all reachable nodes to 
component.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2804--2804
[]    \OT1/cmtt/m/n/12 (2) Sets 'pred', 'thread' and 'depth' attributes of node
s. These[] 
 []

[44]
Overfull \hbox (25.27165pt too wide) in paragraph at lines 2834--2834
[]    \OT1/cmtt/m/n/12 pivot: May be one of the following; 'first[]eligible' or
 'dantzig'.[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2860--2860
[]\OT1/cmtt/m/n/12 Used by tarjan method. This method should not be called dire
ctly by[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2870--2870
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []

[45]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 2896--2896
[]\OT1/cmtt/m/n/12 Implements Tarjan's algorithm for determining strongly conne
cted set of[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2901--2901
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2957--2957
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []

[46]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 2969--2970
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

[47] [48]
Overfull \hbox (72.59099pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 dfs(), dis-play(), edge[]to[]string(), fifo[]label[]correcting(
), find[]cycle[]capacity(), find[]feasible[]flow(),
 []


Overfull \hbox (38.18996pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 get[]approximate[]diameter(), get[]degree(), get[]diameter(), g
et[]edge[]attr(), get[]edge[]cost(),
 []


Overfull \hbox (12.13133pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 get[]edge[]list(), get[]edge[]num(), get[]in[]neighbors(), get[
]layout(), get[]negative[]cycle(),
 []


Overfull \hbox (76.08983pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 get[]neighbors(), get[]node(), get[]node[]attr(), get[]node[]li
st(), get[]node[]num(), get[]out[]neighbors(),
 []


Overfull \hbox (6.73946pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 get[]simplex[]solution[]graph(), la-bel[]components(), la-bel[]
correcting[]check[]cycle(), la-
 []


Overfull \hbox (37.99413pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 bel[]correcting[]get[]cycle(), la-bel[]strong[]component(), max
[]flow(), max[]flow[]preflowpush(),
 []


Overfull \hbox (6.20418pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 min[]cost[]flow(), min-i-mum[]spanning[]tree[]kruskal(), min-i-
mum[]spanning[]tree[]prim(),
 []


Overfull \hbox (34.93916pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 net-work[]simplex(), page[]rank(), print[]flow(), pro-cess[]edg
e[]dijkstra(), pro-cess[]edge[]flow(),
 []


Overfull \hbox (28.7509pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 show[]flow(), sim-plex[]augment[]cycle(), sim-plex[]compute[]po
tentials(), sim-plex[]connect(),
 []


Overfull \hbox (82.50005pt too wide) in paragraph at lines 3145--3146
\OT1/cmr/m/n/12 sim-plex[]determine[]leaving[]arc(), sim-plex[]find[]cycle(), s
im-plex[]find[]tree(), sim-plex[]identify[]cycle(),
 []


Overfull \hbox (59.00017pt too wide) in paragraph at lines 3151--3152
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

) [49] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.tex
Overfull \hbox (122.37866pt too wide) in paragraph at lines 50--51
\OT1/cmtt/m/n/12 '\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/c
mtt/m/n/12 documentclass[landscape]\OMS/cmtt/m/n/12 f\OT1/cmtt/m/n/12 article\O
MS/cmtt/m/n/12 gn\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/cmtt/m/n/12 usepacka
ge[x11n...|  
 []


Overfull \hbox (21.52051pt too wide) in paragraph at lines 68--69
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],]*$')|  
 []


Overfull \hbox (118.59155pt too wide) in paragraph at lines 71--72
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[50


] [51]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 251--251
[]    \OT1/cmtt/m/n/12 Adds root node to the tree with name root and returns ro
ot Node[] 
 []

[52]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 313--313
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 341--341
[]    \OT1/cmtt/m/n/12 Searches tree starting from node named root using breadt
h-first[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 342--342
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []

[53]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 373--373
[]    \OT1/cmtt/m/n/12 Traverses tree starting from node named root. Used strat
egy (BFS,[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 374--374
[]    \OT1/cmtt/m/n/12 DFS) is controlled by argument q. It is a DFS if q is Qu
eue(), BFS[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 375--375
[]    \OT1/cmtt/m/n/12 if q is Stack(). Starts search from root argument if it 
is given.[] 
 []


Overfull \hbox (28.13728pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 play(), edge[]to[]string(), fifo[]label[]correcting(), find[]cy
cle[]capacity(), find[]feasible[]flow(),
 []


Overfull \hbox (38.18996pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 get[]approximate[]diameter(), get[]degree(), get[]diameter(), g
et[]edge[]attr(), get[]edge[]cost(),
 []


Overfull \hbox (12.13133pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 get[]edge[]list(), get[]edge[]num(), get[]in[]neighbors(), get[
]layout(), get[]negative[]cycle(),
 []


Overfull \hbox (76.08983pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 get[]neighbors(), get[]node(), get[]node[]attr(), get[]node[]li
st(), get[]node[]num(), get[]out[]neighbors(),
 []


Overfull \hbox (6.73946pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 get[]simplex[]solution[]graph(), la-bel[]components(), la-bel[]
correcting[]check[]cycle(), la-
 []


Overfull \hbox (37.99413pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 bel[]correcting[]get[]cycle(), la-bel[]strong[]component(), max
[]flow(), max[]flow[]preflowpush(),
 []


Overfull \hbox (6.20418pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 min[]cost[]flow(), min-i-mum[]spanning[]tree[]kruskal(), min-i-
mum[]spanning[]tree[]prim(),
 []


Overfull \hbox (34.93916pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 net-work[]simplex(), page[]rank(), print[]flow(), pro-cess[]edg
e[]dijkstra(), pro-cess[]edge[]flow(),
 []


Overfull \hbox (28.7509pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 show[]flow(), sim-plex[]augment[]cycle(), sim-plex[]compute[]po
tentials(), sim-plex[]connect(),
 []


Overfull \hbox (82.50005pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 sim-plex[]determine[]leaving[]arc(), sim-plex[]find[]cycle(), s
im-plex[]find[]tree(), sim-plex[]identify[]cycle(),
 []

[54]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 399--400
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 486--486
[]    \OT1/cmtt/m/n/12 attrs: Tree attributes in keyword arguments format. See 
Graph and[] 
 []

[55] [56]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 597--597
[]    \OT1/cmtt/m/n/12 Returns right child of node n. n can be Node() instance 
or string[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 627--627
[]    \OT1/cmtt/m/n/12 Returns left child of node n. n can be Node() instance o
r string[] 
 []

[57]
Overfull \hbox (12.92165pt too wide) in paragraph at lines 681--681
[]\OT1/cmtt/m/n/12 API: print[]nodes(self, order = 'in', priority = 'L', displa
y = None,[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 684--684
[]    \OT1/cmtt/m/n/12 A recursive function that prints nodes to stdout startin
g from[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 687--687
[]    \OT1/cmtt/m/n/12 order: Order of printing. Acceptable arguments are 'pre'
, 'in',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 689--689
[]    \OT1/cmtt/m/n/12 priority: Priority of printing, acceptable arguments are
 'L' and[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 713--713
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 741--741
[]    \OT1/cmtt/m/n/12 Searches tree starting from node named root using breadt
h-first[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 742--742
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []

[58]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 768--768
[]\OT1/cmtt/m/n/12 API: traverse(self, root=None, display=None, q=Stack(), prio
rity='L',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 771--771
[]    \OT1/cmtt/m/n/12 Traverses tree starting from node named root if root arg
ument is[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 772--772
[]    \OT1/cmtt/m/n/12 provided. Starts search from root node of the tree other
wise. Search[] 
 []


Overfull \hbox (56.93755pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 ate[]cluster(), cre-ate[]residual[]graph(), cy-cle[]canceling()
, del[]edge(), dis-play(), edge[]to[]string(),
 []


Overfull \hbox (53.26897pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 fifo[]label[]correcting(), find[]cycle[]capacity(), find[]feasi
ble[]flow(), get[]approximate[]diameter(),
 []


Overfull \hbox (52.5248pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 get[]degree(), get[]diameter(), get[]edge[]attr(), get[]edge[]c
ost(), get[]edge[]list(), get[]edge[]num(),
 []


Overfull \hbox (84.69334pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 get[]node[]attr(), get[]node[]list(), get[]node[]num(), get[]ou
t[]neighbors(), get[]simplex[]solution[]graph(),
 []


Overfull \hbox (4.38948pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 bel[]strong[]component(), max[]flow(), max[]flow[]preflowpush()
, min[]cost[]flow(), min-
 []


Overfull \hbox (1.64784pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 i-mum[]spanning[]tree[]kruskal(), min-i-mum[]spanning[]tree[]pr
im(), net-work[]simplex(),
 []


Overfull \hbox (43.4774pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 page[]rank(), print[]flow(), pro-cess[]edge[]dijkstra(), pro-ce
ss[]edge[]flow(), pro-cess[]edge[]prim(),
 []


Overfull \hbox (62.49916pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 pro-cess[]edge[]search(), pro-cess[]node[]search(), ran-dom(), 
re-la-bel(), search(), set[]display[]mode(),
 []


Overfull \hbox (2.87505pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 set[]edge[]attr(), set[]layout(), set[]node[]attr(), show[]flow
(), sim-plex[]augment[]cycle(),
 []


Overfull \hbox (1.00813pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]compute[]potentials(), sim-plex[]connect(), sim-plex[
]determine[]leaving[]arc(),
 []


Overfull \hbox (63.56969pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]find[]cycle(), sim-plex[]find[]tree(), sim-plex[]iden
tify[]cycle(), sim-plex[]mark[]entering[]arc(),
 []


Overfull \hbox (35.97054pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]mark[]leaving[]arc(), sim-plex[]mark[]st[]arcs(), sim
-plex[]optimal(), sim-plex[]redraw(),
 []


Overfull \hbox (24.88649pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]remove[]arc(), sim-plex[]search(), sim-plex[]select[]
entering[]arc(), strong[]connect(),
 []

[59]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 831--832
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

) [60] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.ind
Overfull \hbox (2.53183pt too wide) in paragraph at lines 5--7
[]| \OT1/cmr/m/n/12 coinor.gimpy.global[]constants \OT1/cmr/m/it/12 (mod-ule)\O
T1/cmr/m/n/12 ,
 []

[61



])
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 124.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 124.
 (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.aux
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.au
x) (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.aux))
Package atveryend Info: Empty hook `AtVeryEndDocument' on input line 124.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 124.


Package rerunfilecheck Warning: File `api.out' has changed.
(rerunfilecheck)                Rerun to get outlines right
(rerunfilecheck)                or use package `bookmark'.

Package rerunfilecheck Info: Checksums for `api.out':
(rerunfilecheck)             Before: 0E59F54153556C7174C54FB88C90D72E;2099
(rerunfilecheck)             After:  2316EC5A6F736BDD317E29DC154EC3CA;2142.

LaTeX Font Warning: Some font shapes were not available, defaults substituted.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 124.
 ) 
Here is how much of TeX's memory you used:
 5756 strings out of 494046
 87632 string characters out of 3148412
 182571 words of memory out of 3000000
 8940 multiletter control sequences out of 15000+200000
 13889 words of font info for 53 fonts, out of 3000000 for 9000
 715 hyphenation exceptions out of 8191
 32i,12n,43p,1686b,452s stack positions out of 5000i,500n,10000p,200000b,50000s

Output written on api.dvi (61 pages, 210088 bytes).
