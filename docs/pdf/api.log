This is pdfTeX, Version 3.1415926-2.3-1.40.12 (MiKTeX 2.9 64-bit) (preloaded format=latex 2012.12.30)  4 APR 2014 15:14
entering extended mode
**api.tex
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.tex
LaTeX2e <2011/06/27>
Babel <v3.8m> and hyphenation patterns for english, afrikaans, ancientgreek, ar
abic, armenian, assamese, basque, bengali, bokmal, bulgarian, catalan, coptic, 
croatian, czech, danish, dutch, esperanto, estonian, farsi, finnish, french, ga
lician, german, german-x-2009-06-19, greek, gujarati, hindi, hungarian, iceland
ic, indonesian, interlingua, irish, italian, kannada, kurmanji, lao, latin, lat
vian, lithuanian, malayalam, marathi, mongolian, mongolianlmc, monogreek, ngerm
an, ngerman-x-2009-06-19, nynorsk, oriya, panjabi, pinyin, polish, portuguese, 
romanian, russian, sanskrit, serbian, slovak, slovenian, spanish, swedish, swis
sgerman, tamil, telugu, turkish, turkmen, ukenglish, ukrainian, uppersorbian, u
senglishmax, welsh, loaded.
("C:\Program Files\MiKTeX 2.9\tex\latex\base\article.cls"
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
("C:\Program Files\MiKTeX 2.9\tex\latex\base\size10.clo"
File: size10.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
("C:\Program Files\MiKTeX 2.9\tex\latex\base\alltt.sty"
Package: alltt 1997/06/16 v2.0g defines alltt environment
)
("C:\Program Files\MiKTeX 2.9\tex\latex\ltxmisc\parskip.sty"
Package: parskip 2001/04/09 non-zero parskip adjustments
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\fancyhdr\fancyhdr.sty
\fancy@headwidth=\skip43
\f@ncyO@elh=\skip44
\f@ncyO@erh=\skip45
\f@ncyO@olh=\skip46
\f@ncyO@orh=\skip47
\f@ncyO@elf=\skip48
\f@ncyO@erf=\skip49
\f@ncyO@olf=\skip50
\f@ncyO@orf=\skip51
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\boxedminipage\boxedminipage
.sty) ("C:\Program Files\MiKTeX 2.9\tex\latex\base\makeidx.sty"
Package: makeidx 2000/03/29 v1.0m Standard LaTeX package
)
("C:\Program Files\MiKTeX 2.9\tex\latex\multirow\multirow.sty"
\bigstrutjot=\dimen103
)
("C:\Program Files\MiKTeX 2.9\tex\latex\tools\longtable.sty"
Package: longtable 2004/02/01 v4.11 Multi-page Table package (DPC)
\LTleft=\skip52
\LTright=\skip53
\LTpre=\skip54
\LTpost=\skip55
\LTchunksize=\count87
\LTcapwidth=\dimen104
\LT@head=\box26
\LT@firsthead=\box27
\LT@foot=\box28
\LT@lastfoot=\box29
\LT@cols=\count88
\LT@rows=\count89
\c@LT@tables=\count90
\c@LT@chunks=\count91
\LT@p@ftn=\toks14
)
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\tocbibind\tocbibind.sty
Package: tocbibind 2010/10/13 v1.5k extra ToC listings
Package tocbibind Info: The document has section divisions on input line 50.


Package tocbibind Note: Using section or other style headings.

) ("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\amssymb.sty"
Package: amssymb 2009/06/22 v3.00

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\amsfonts.sty"
Package: amsfonts 2009/06/22 v3.00 Basic AMSFonts support
\@emptytoks=\toks15
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 96.
))
(C:\Users\tkr2\AppData\Roaming\MiKTeX\2.9\tex\latex\preprint\fullpage.sty
Package: fullpage 1999/02/23 1.1 (PWD)
\FP@margin=\skip56
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\color.sty"
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

("C:\Program Files\MiKTeX 2.9\tex\latex\00miktex\color.cfg"
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: dvips.def on input line 130.

("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\dvips.def"
File: dvips.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\dvipsnam.def"
File: dvipsnam.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
))
\BCL=\skip57
Package color Info: Redefining color py@inputcolour on input line 35.
\funcindent=\skip58
\funcwidth=\skip59
\varindent=\skip60
\varnamewidth=\skip61
\vardescrwidth=\skip62
\varwidth=\skip63

("C:\Program Files\MiKTeX 2.9\tex\latex\base\inputenc.sty"
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks16
\inpenc@posthook=\toks17

("C:\Program Files\MiKTeX 2.9\tex\latex\base\utf8.def"
File: utf8.def 2008/04/05 v1.1m UTF-8 support for inputenc
Now handling font encoding OML ...
... no UTF-8 mapping file for font encoding OML
Now handling font encoding T1 ...
... processing UTF-8 mapping file for font encoding T1

("C:\Program Files\MiKTeX 2.9\tex\latex\base\t1enc.dfu"
File: t1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00AB (decimal 171)
   defining Unicode char U+00BB (decimal 187)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C0 (decimal 192)
   defining Unicode char U+00C1 (decimal 193)
   defining Unicode char U+00C2 (decimal 194)
   defining Unicode char U+00C3 (decimal 195)
   defining Unicode char U+00C4 (decimal 196)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00C7 (decimal 199)
   defining Unicode char U+00C8 (decimal 200)
   defining Unicode char U+00C9 (decimal 201)
   defining Unicode char U+00CA (decimal 202)
   defining Unicode char U+00CB (decimal 203)
   defining Unicode char U+00CC (decimal 204)
   defining Unicode char U+00CD (decimal 205)
   defining Unicode char U+00CE (decimal 206)
   defining Unicode char U+00CF (decimal 207)
   defining Unicode char U+00D0 (decimal 208)
   defining Unicode char U+00D1 (decimal 209)
   defining Unicode char U+00D2 (decimal 210)
   defining Unicode char U+00D3 (decimal 211)
   defining Unicode char U+00D4 (decimal 212)
   defining Unicode char U+00D5 (decimal 213)
   defining Unicode char U+00D6 (decimal 214)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00D9 (decimal 217)
   defining Unicode char U+00DA (decimal 218)
   defining Unicode char U+00DB (decimal 219)
   defining Unicode char U+00DC (decimal 220)
   defining Unicode char U+00DD (decimal 221)
   defining Unicode char U+00DE (decimal 222)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E0 (decimal 224)
   defining Unicode char U+00E1 (decimal 225)
   defining Unicode char U+00E2 (decimal 226)
   defining Unicode char U+00E3 (decimal 227)
   defining Unicode char U+00E4 (decimal 228)
   defining Unicode char U+00E5 (decimal 229)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00E7 (decimal 231)
   defining Unicode char U+00E8 (decimal 232)
   defining Unicode char U+00E9 (decimal 233)
   defining Unicode char U+00EA (decimal 234)
   defining Unicode char U+00EB (decimal 235)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F0 (decimal 240)
   defining Unicode char U+00F1 (decimal 241)
   defining Unicode char U+00F2 (decimal 242)
   defining Unicode char U+00F3 (decimal 243)
   defining Unicode char U+00F4 (decimal 244)
   defining Unicode char U+00F5 (decimal 245)
   defining Unicode char U+00F6 (decimal 246)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+00F9 (decimal 249)
   defining Unicode char U+00FA (decimal 250)
   defining Unicode char U+00FB (decimal 251)
   defining Unicode char U+00FC (decimal 252)
   defining Unicode char U+00FD (decimal 253)
   defining Unicode char U+00FE (decimal 254)
   defining Unicode char U+00FF (decimal 255)
   defining Unicode char U+0102 (decimal 258)
   defining Unicode char U+0103 (decimal 259)
   defining Unicode char U+0104 (decimal 260)
   defining Unicode char U+0105 (decimal 261)
   defining Unicode char U+0106 (decimal 262)
   defining Unicode char U+0107 (decimal 263)
   defining Unicode char U+010C (decimal 268)
   defining Unicode char U+010D (decimal 269)
   defining Unicode char U+010E (decimal 270)
   defining Unicode char U+010F (decimal 271)
   defining Unicode char U+0110 (decimal 272)
   defining Unicode char U+0111 (decimal 273)
   defining Unicode char U+0118 (decimal 280)
   defining Unicode char U+0119 (decimal 281)
   defining Unicode char U+011A (decimal 282)
   defining Unicode char U+011B (decimal 283)
   defining Unicode char U+011E (decimal 286)
   defining Unicode char U+011F (decimal 287)
   defining Unicode char U+0130 (decimal 304)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0132 (decimal 306)
   defining Unicode char U+0133 (decimal 307)
   defining Unicode char U+0139 (decimal 313)
   defining Unicode char U+013A (decimal 314)
   defining Unicode char U+013D (decimal 317)
   defining Unicode char U+013E (decimal 318)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0143 (decimal 323)
   defining Unicode char U+0144 (decimal 324)
   defining Unicode char U+0147 (decimal 327)
   defining Unicode char U+0148 (decimal 328)
   defining Unicode char U+014A (decimal 330)
   defining Unicode char U+014B (decimal 331)
   defining Unicode char U+0150 (decimal 336)
   defining Unicode char U+0151 (decimal 337)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+0154 (decimal 340)
   defining Unicode char U+0155 (decimal 341)
   defining Unicode char U+0158 (decimal 344)
   defining Unicode char U+0159 (decimal 345)
   defining Unicode char U+015A (decimal 346)
   defining Unicode char U+015B (decimal 347)
   defining Unicode char U+015E (decimal 350)
   defining Unicode char U+015F (decimal 351)
   defining Unicode char U+0160 (decimal 352)
   defining Unicode char U+0161 (decimal 353)
   defining Unicode char U+0162 (decimal 354)
   defining Unicode char U+0163 (decimal 355)
   defining Unicode char U+0164 (decimal 356)
   defining Unicode char U+0165 (decimal 357)
   defining Unicode char U+016E (decimal 366)
   defining Unicode char U+016F (decimal 367)
   defining Unicode char U+0170 (decimal 368)
   defining Unicode char U+0171 (decimal 369)
   defining Unicode char U+0178 (decimal 376)
   defining Unicode char U+0179 (decimal 377)
   defining Unicode char U+017A (decimal 378)
   defining Unicode char U+017B (decimal 379)
   defining Unicode char U+017C (decimal 380)
   defining Unicode char U+017D (decimal 381)
   defining Unicode char U+017E (decimal 382)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201A (decimal 8218)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
   defining Unicode char U+201E (decimal 8222)
   defining Unicode char U+2030 (decimal 8240)
   defining Unicode char U+2031 (decimal 8241)
   defining Unicode char U+2039 (decimal 8249)
   defining Unicode char U+203A (decimal 8250)
   defining Unicode char U+2423 (decimal 9251)
)
Now handling font encoding OT1 ...
... processing UTF-8 mapping file for font encoding OT1

("C:\Program Files\MiKTeX 2.9\tex\latex\base\ot1enc.dfu"
File: ot1enc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A1 (decimal 161)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00B8 (decimal 184)
   defining Unicode char U+00BF (decimal 191)
   defining Unicode char U+00C5 (decimal 197)
   defining Unicode char U+00C6 (decimal 198)
   defining Unicode char U+00D8 (decimal 216)
   defining Unicode char U+00DF (decimal 223)
   defining Unicode char U+00E6 (decimal 230)
   defining Unicode char U+00EC (decimal 236)
   defining Unicode char U+00ED (decimal 237)
   defining Unicode char U+00EE (decimal 238)
   defining Unicode char U+00EF (decimal 239)
   defining Unicode char U+00F8 (decimal 248)
   defining Unicode char U+0131 (decimal 305)
   defining Unicode char U+0141 (decimal 321)
   defining Unicode char U+0142 (decimal 322)
   defining Unicode char U+0152 (decimal 338)
   defining Unicode char U+0153 (decimal 339)
   defining Unicode char U+2013 (decimal 8211)
   defining Unicode char U+2014 (decimal 8212)
   defining Unicode char U+2018 (decimal 8216)
   defining Unicode char U+2019 (decimal 8217)
   defining Unicode char U+201C (decimal 8220)
   defining Unicode char U+201D (decimal 8221)
)
Now handling font encoding OMS ...
... processing UTF-8 mapping file for font encoding OMS

("C:\Program Files\MiKTeX 2.9\tex\latex\base\omsenc.dfu"
File: omsenc.dfu 2008/04/05 v1.1m UTF-8 support for inputenc
   defining Unicode char U+00A7 (decimal 167)
   defining Unicode char U+00B6 (decimal 182)
   defining Unicode char U+00B7 (decimal 183)
   defining Unicode char U+2020 (decimal 8224)
   defining Unicode char U+2021 (decimal 8225)
   defining Unicode char U+2022 (decimal 8226)
)
Now handling font encoding OMX ...
... no UTF-8 mapping file for font encoding OMX
Now handling font encoding U ...
... no UTF-8 mapping file for font encoding U
   defining Unicode char U+00A9 (decimal 169)
   defining Unicode char U+00AA (decimal 170)
   defining Unicode char U+00AE (decimal 174)
   defining Unicode char U+00BA (decimal 186)
   defining Unicode char U+02C6 (decimal 710)
   defining Unicode char U+02DC (decimal 732)
   defining Unicode char U+200C (decimal 8204)
   defining Unicode char U+2026 (decimal 8230)
   defining Unicode char U+2122 (decimal 8482)
   defining Unicode char U+2423 (decimal 9251)
))
("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\hyperref.sty"
Package: hyperref 2012/05/13 v6.82q Hypertext links for LaTeX

("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\hobsub-hyperref.sty"
Package: hobsub-hyperref 2012/04/25 v1.12 Bundle oberdiek, subset hyperref (HO)


("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\hobsub-generic.sty"
Package: hobsub-generic 2012/04/25 v1.12 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/04/25 v1.12 Construct package bundles (HO)
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is not detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode is ignored in DVI mode.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2011/06/24 v1.1 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
("C:\Program Files\MiKTeX 2.9\tex\latex\graphics\keyval.sty"
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks18
)
("C:\Program Files\MiKTeX 2.9\tex\generic\ifxetex\ifxetex.sty"
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
("C:\Program Files\MiKTeX 2.9\tex\latex\oberdiek\kvoptions.sty"
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen105
\Hy@linkcounter=\count92
\Hy@pagecounter=\count93

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\pd1enc.def"
File: pd1enc.def 2012/05/13 v6.82q Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
\Hy@SavedSpaceFactor=\count94

("C:\Program Files\MiKTeX 2.9\tex\latex\00miktex\hyperref.cfg"
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `bookmarks' set `true' on input line 3941.
Package hyperref Info: Option `bookmarksopen' set `false' on input line 3941.
Package hyperref Info: Option `colorlinks' set `true' on input line 3941.


Package hyperref Warning: Option `pagecolor' is not available anymore.

Package hyperref Info: Hyper figures OFF on input line 4062.
Package hyperref Info: Link nesting OFF on input line 4067.
Package hyperref Info: Hyper index ON on input line 4070.
Package hyperref Info: Plain pages OFF on input line 4077.
Package hyperref Info: Backreferencing ON on input line 4080.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4300.
("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\backref.sty"
Package: backref 2010/08/30 v1.36 Bibliographical back referencing

("C:\Program Files\MiKTeX 2.9\tex\latex\oberdiek\rerunfilecheck.sty"
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
))
\c@Hy@tempcnt=\count95

("C:\Program Files\MiKTeX 2.9\tex\latex\ltxmisc\url.sty"
\Urlmuskip=\muskip10
Package: url 2006/04/12  ver 3.3  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 4653.
\Fld@menulength=\count96
\Field@Width=\dimen106
\Fld@charsize=\dimen107
Package hyperref Info: Hyper figures OFF on input line 5773.
Package hyperref Info: Link nesting OFF on input line 5778.
Package hyperref Info: Hyper index ON on input line 5781.
Package hyperref Info: backreferencing ON on input line 5786.
Package hyperref Info: Link coloring ON on input line 5791.
Package hyperref Info: Link coloring with OCG OFF on input line 5798.
Package hyperref Info: PDF/A mode OFF on input line 5803.
LaTeX Info: Redefining \ref on input line 5843.
LaTeX Info: Redefining \pageref on input line 5847.
\Hy@abspage=\count97
\c@Item=\count98
\c@Hfootnote=\count99
)

Package hyperref Message: Driver: hdvips.

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\hdvips.def"
File: hdvips.def 2012/05/13 v6.82q Hyperref driver for dvips

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\pdfmark.def"
File: pdfmark.def 2012/05/13 v6.82q Hyperref definitions for pdfmark specials
\pdf@docset=\toks19
\pdf@box=\box30
\pdf@toks=\toks20
\pdf@defaulttoks=\toks21
\Fld@listcount=\count100
\c@bookmark@seq@number=\count101
\Hy@SectionHShift=\skip64
))
\@indexfile=\write3

Writing index file api.idx
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.aux
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.au
x) (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.aux))
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 80.
LaTeX Font Info:    ... okay on input line 80.
\AtBeginShipoutBox=\box31
Package hyperref Info: Link coloring ON on input line 80.

("C:\Program Files\MiKTeX 2.9\tex\latex\hyperref\nameref.sty"
Package: nameref 2010/04/30 v2.40 Cross-referencing by name of section

("C:\Program Files\MiKTeX 2.9\tex\generic\oberdiek\gettitlestring.sty"
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count102
)
LaTeX Info: Redefining \ref on input line 80.
LaTeX Info: Redefining \pageref on input line 80.
LaTeX Info: Redefining \nameref on input line 80.

(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.out)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.out)
\@outlinefile=\write4
LaTeX Font Info:    Try loading font information for U+msa on input line 95.

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\umsa.fd"
File: umsa.fd 2009/06/22 v3.00 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 95.

("C:\Program Files\MiKTeX 2.9\tex\latex\amsfonts\umsb.fd"
File: umsb.fd 2009/06/22 v3.00 AMS symbols B
)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.toc)
\tf@toc=\write5
 [1

]
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.tex
LaTeX Font Info:    Try loading font information for OMS+cmr on input line 26.

("C:\Program Files\MiKTeX 2.9\tex\latex\base\omscmr.fd"
File: omscmr.fd 1999/05/25 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 26.
LaTeX Font Info:    Try loading font information for OMS+cmtt on input line 63.

LaTeX Font Info:    No file OMScmtt.fd. on input line 63.


LaTeX Font Warning: Font shape `OMS/cmtt/m/n' undefined
(Font)              using `OMS/cmsy/m/n' instead
(Font)              for symbol `textbraceleft' on input line 63.


Overfull \hbox (66.27612pt too wide) in paragraph at lines 77--78
\OT1/cmtt/m/n/10 '\OMS/cmtt/m/n/10 n\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/c
mtt/m/n/10 documentclass[landscape]\OMS/cmtt/m/n/10 f\OT1/cmtt/m/n/10 article\O
MS/cmtt/m/n/10 gn\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/cmtt/m/n/10 usepacka
ge[x11n...|  
 []

LaTeX Font Info:    Try loading font information for OML+cmtt on input line 87.

LaTeX Font Info:    No file OMLcmtt.fd. on input line 87.

LaTeX Font Warning: Font shape `OML/cmtt/m/n' undefined
(Font)              using `OML/cmm/m/it' instead
(Font)              for symbol `textgreater' on input line 87.


Overfull \hbox (63.86563pt too wide) in paragraph at lines 98--99
\OT1/cmtt/m/n/10 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[2

]) [3]
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.te
x
Overfull \hbox (66.27612pt too wide) in paragraph at lines 121--122
\OT1/cmtt/m/n/10 '\OMS/cmtt/m/n/10 n\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/c
mtt/m/n/10 documentclass[landscape]\OMS/cmtt/m/n/10 f\OT1/cmtt/m/n/10 article\O
MS/cmtt/m/n/10 gn\OT1/cmtt/m/n/10 n\OMS/cmtt/m/n/10 nn\OT1/cmtt/m/n/10 usepacka
ge[x11n...|  
 []


Overfull \hbox (63.86563pt too wide) in paragraph at lines 130--131
\OT1/cmtt/m/n/10 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[4


]
Overfull \hbox (38.26202pt too wide) in paragraph at lines 246--276
[] 
 []

[5]) [6] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.tex
Overfull \hbox (5.72021pt too wide) in paragraph at lines 41--41
[]\OT1/cmtt/m/n/12 undirected graph. She should be aware of this. Python will r
aise an exception[] 
 []


Overfull \hbox (18.07022pt too wide) in paragraph at lines 47--47
[]\OT1/cmtt/m/n/12 get visualization of algorithm without changing global displ
ay behavior of your[] 
 []

[7


]
Overfull \hbox (122.37866pt too wide) in paragraph at lines 135--136
\OT1/cmtt/m/n/12 '\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/c
mtt/m/n/12 documentclass[landscape]\OMS/cmtt/m/n/12 f\OT1/cmtt/m/n/12 article\O
MS/cmtt/m/n/12 gn\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/cmtt/m/n/12 usepacka
ge[x11n...|  
 []


Overfull \hbox (21.52051pt too wide) in paragraph at lines 150--151
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],]*$')|  
 []


Overfull \hbox (118.59155pt too wide) in paragraph at lines 153--154
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[8]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 260--260
[]    \OT1/cmtt/m/n/12 Returns Node attribute attr if exists returns None, othe
rwise.[] 
 []

[9] [10]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 347--348
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []


Overfull \hbox (23.54265pt too wide) in paragraph at lines 422--422
[]    \OT1/cmtt/m/n/12 self.neighbors, self.in[]neighbors, self.nodes, self.out
[]neighbors,[] 
 []

[11]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 474--474
[]    \OT1/cmtt/m/n/12 Graph should not contain a node with this name. We do no
t allow[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 544--544
[]    \OT1/cmtt/m/n/12 self.neighbors, self.nodes and self.in[]neighbors are up
dated if[] 
 []

[12]
Overfull \hbox (17.36765pt too wide) in paragraph at lines 574--574
[]    \OT1/cmtt/m/n/12 self.edge[]attr, self.neighbors and self.in[]neighbors a
re updated.[] 
 []


Overfull \hbox (34.16365pt too wide) in paragraph at lines 624--624
[]\OT1/cmtt/m/n/12 Returns cost attr of edge, required for minimum[]spanning[]t
ree[]kruskal().[] 
 []

[13] [14] [15] [16] [17]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1045--1045
[]\OT1/cmtt/m/n/12 This method labels the nodes of an undirected graph with com
ponent[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1047--1047
[]\OT1/cmtt/m/n/12 same component. It will display the algortihm if display arg
ument is[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1054--1054
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []

[18]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 1078--1078
[]\OT1/cmtt/m/n/12 Implements Tarjan's algorithm for determining strongly conne
cted set of[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1083--1083
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1107--1107
[]\OT1/cmtt/m/n/12 Used by tarjan method. This method should not be called dire
ctly by[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1117--1117
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []

[19]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1149--1149
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (23.54265pt too wide) in paragraph at lines 1171--1171
[]\OT1/cmtt/m/n/12 API: dfs(self, root, disc[]count = 0, finish[]count = 1, com
ponent=None,[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1180--1180
[]    \OT1/cmtt/m/n/12 transpose: Goes in the reverse direction along edges if 
transpose[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1183--1183
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (17.36765pt too wide) in paragraph at lines 1184--1184
[]    \OT1/cmtt/m/n/12 number as value. Updates 'disc[]time' and 'finish[]time'
 attributes[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1187--1187
[]    \OT1/cmtt/m/n/12 Returns a tuple that has discovery time and finish time 
of the[] 
 []

[20]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 1217--1217
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1246--1246
[]   \OT1/cmtt/m/n/12 This method determines all nodes reachable from "source" 
ie. creates[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1249--1249
[]   \OT1/cmtt/m/n/12 If there exists a path from "source" to "destination" it 
will return[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1250--1250
[]   \OT1/cmtt/m/n/12 list of the nodes is this path. If there is no such path,
 it will[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1251--1251
[]   \OT1/cmtt/m/n/12 return the precedence tree constructed from source (dicti
onary).[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1252--1252
[]\OT1/cmtt/m/n/12 Optionally, it marks all nodes reachable from "source" with 
a component[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1253--1253
[]\OT1/cmtt/m/n/12 number. The variable "q" determines the order in which the n
odes are[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1259--1259
[]    \OT1/cmtt/m/n/12 algo: Algortihm that specifies search. Available algorti
hms are[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1264--1264
[]    \OT1/cmtt/m/n/12 Nodes will have 'component' attribute that will have com
ponent[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1265--1265
[]    \OT1/cmtt/m/n/12 number as value (if component argument provided). Color 
attribute[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1269--1269
[]    \OT1/cmtt/m/n/12 not specified, returns list of node names in the path fr
om source[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1270--1270
[]    \OT1/cmtt/m/n/12 to destionation if destionation is specified and there i
s a path.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1271--1271
[]    \OT1/cmtt/m/n/12 If there is no path returns predecessor tree in dictiona
ry form.[] 
 []

[21]
Overfull \hbox (27.00066pt too wide) in paragraph at lines 1295--1295
[]\OT1/cmtt/m/n/12 Used by search() method. Process nodes along the search. Sho
uld not be[] 
 []

[22]
Overfull \hbox (29.71765pt too wide) in paragraph at lines 1323--1323
[]\OT1/cmtt/m/n/12 API: process[]edge[]dijkstra(self, current, neighbor, pred, 
q, component)[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1325--1325
[]\OT1/cmtt/m/n/12 Used by search() method if the algo argument is 'Dijkstra'. 
Processes[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1332--1332
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []


Overfull \hbox (5.01764pt too wide) in paragraph at lines 1356--1356
[]\OT1/cmtt/m/n/12 API: process[]edge[]prim(self, current, neighbor, pred, q, c
omponent)[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1359--1359
[]\OT1/cmtt/m/n/12 edges along Prim's algorithm. User does not need to call thi
s method[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1365--1365
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []

[23]
Overfull \hbox (17.36765pt too wide) in paragraph at lines 1389--1389
[]\OT1/cmtt/m/n/12 API: process[]edge[]search(self, current, neighbor, pred, q,
 component,[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1392--1392
[]\OT1/cmtt/m/n/12 Used by search() method. Processes edges according to the un
derlying[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1398--1398
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1403--1403
[]    \OT1/cmtt/m/n/12 'color', 'distance', 'component' attribute of nodes and 
edges may[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1433--1433
[]    \OT1/cmtt/m/n/12 q: Data structure that holds nodes to be processed in a 
queue.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1435--1435
[]    \OT1/cmtt/m/n/12 'color', 'distance', 'component' attribute of nodes and 
edges may[] 
 []

[24]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 1494--1494
[]\OT1/cmtt/m/n/12 Finds maximum flow from source to sink by a depth-first sear
ch based[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1498--1498
[]     \OT1/cmtt/m/n/12 attribute and for which there does does not exist both 
arcs (i,j)[] 
 []

[25] [26]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 1644--1644
[]    \OT1/cmtt/m/n/12 Solves minimum cost feasible flow problem using cycle ca
nceling[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1645--1645
[]    \OT1/cmtt/m/n/12 algorithm. Returns True when an optimal solution is foun
d, returns[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1652--1652
[]    \OT1/cmtt/m/n/12 (2) Nodes should have 'demand' attribute, this value sho
uld be[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1653--1653
[]    \OT1/cmtt/m/n/12 positive if the node is a supply node, negative if it is
 demand[] 
 []

[27]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 1684--1684
[]    \OT1/cmtt/m/n/12 Solves feasible flow problem, stores solution in 'flow' 
attribute[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1685--1685
[]    \OT1/cmtt/m/n/12 or arcs. This method is used to get an initial feasible 
flow for[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 1686--1686
[]    \OT1/cmtt/m/n/12 simplex and cycle canceling algorithms. Uses max[]flow()
 method.[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1687--1687
[]    \OT1/cmtt/m/n/12 Other max flow methods can also be used. Returns True if
 a feasible[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1688--1688
[]    \OT1/cmtt/m/n/12 flow is found, returns False, if the problem is infeasib
le. When[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1697--1697
[]    \OT1/cmtt/m/n/12 Returns True if a feasible flow is found, returns False,
 if the[] 
 []

[28]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 1778--1778
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []

[29]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 1807--1807
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1831--1831
[]    \OT1/cmtt/m/n/12 display(self, highlight = None, basename = 'graph', form
at = 'png',[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 1835--1835
[]    \OT1/cmtt/m/n/12 Current display modes: 'off', 'file', 'pygame', 'PIL', '
xdot',[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1837--1837
[]    \OT1/cmtt/m/n/12 Current layout modes: Layouts provided by graphviz ('dot
', 'fdp',[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 1839--1839
[]    \OT1/cmtt/m/n/12 Current formats: Formats provided by graphviz ('ps', 'pd
f', 'png',[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1843--1843
[]    \OT1/cmtt/m/n/12 basename: File name. It will be used if display mode is 
'file'.[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1844--1844
[]    \OT1/cmtt/m/n/12 format: Image format, all format supported by Dot are we
llcome.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1845--1845
[]    \OT1/cmtt/m/n/12 pause: If display is 'pygame' and pause is True pygame w
ill pause[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1846--1846
[]    \OT1/cmtt/m/n/12 and wait for user input before closing the display. It w
ill close[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1849--1849
[]    \OT1/cmtt/m/n/12 A display window will pop up or a file will be written d
epending[] 
 []

[30]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 1901--1901
[]\OT1/cmtt/m/n/12 Finds maximum flow from source to sink by a depth-first sear
ch based[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1905--1905
[]    \OT1/cmtt/m/n/12 attribute and for which there does does not exist both a
rcs (i,j)[] 
 []

[31]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 1936--1936
[]    \OT1/cmtt/m/n/12 Finds and returns negative cost cycle using 'cost' attri
bute of[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1937--1937
[]    \OT1/cmtt/m/n/12 arcs. Return value is a list of nodes representing cycle
 it is in[] 
 []


Overfull \hbox (9.46364pt too wide) in paragraph at lines 1938--1938
[]    \OT1/cmtt/m/n/12 the following form; n[]1-n[]2-...-n[]k, when the cycle h
as k nodes.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1942--1942
[]    \OT1/cmtt/m/n/12 Returns a list of nodes in the cycle if a negative cycle
 exists,[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1967--1967
[]    \OT1/cmtt/m/n/12 Finds all pair shortest paths and stores it in a list of
 lists.[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 1968--1968
[]    \OT1/cmtt/m/n/12 This is possible if the graph does not have negative cyc
les. It will[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1969--1969
[]    \OT1/cmtt/m/n/12 return a tuple with 3 elements. The first element indica
tes whether[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1970--1970
[]    \OT1/cmtt/m/n/12 the graph has a negative cycle. It is true if the graph 
does not[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 1972--1972
[]    \OT1/cmtt/m/n/12 distances. The second element is a dictionary of shortes
t distances[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1973--1973
[]    \OT1/cmtt/m/n/12 between nodes. Keys are tuple of node pairs ie. (i,j). T
he third[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1974--1974
[]    \OT1/cmtt/m/n/12 element is a dictionary that helps to retrieve the short
est path[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1975--1975
[]    \OT1/cmtt/m/n/12 between nodes. Then return value can be represented as (
validity,[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 1976--1976
[]    \OT1/cmtt/m/n/12 distance, nextn) where nextn is the dictionary to retrie
ve paths.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 1977--1977
[]    \OT1/cmtt/m/n/12 distance and nextn can be used as inputs to other method
s to get[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 1982--1982
[]    \OT1/cmtt/m/n/12 Returns (validity, distance, nextn). The distances are v
alid if[] 
 []

[32]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 2014--2014
[]    \OT1/cmtt/m/n/12 Returns the list of nodes on the path from i to j, ie. [
i,...,j][] 
 []


Overfull \hbox (3.28864pt too wide) in paragraph at lines 2036--2036
[]    \OT1/cmtt/m/n/12 floyd[]warshall[]get[]cycle(self, distance, nextn, eleme
nt = None)[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2044--2044
[]    \OT1/cmtt/m/n/12 Returns the list of nodes on the cycle. Ex: [i,j,k,...,r
], where[] 
 []

[33]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 2100--2100
[]    \OT1/cmtt/m/n/12 predecessor dictionary. If graph has a negative cycle, d
etects it[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2103--2103
[]    \OT1/cmtt/m/n/12 (1) 'cost' attribute of arcs. It will be used to compute
 shortest[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2110--2110
[]    \OT1/cmtt/m/n/12 If there is no negative cycle returns to (True, pred), o
therwise[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2111--2111
[]    \OT1/cmtt/m/n/12 returns to (False, cycle) where pred is the predecessor 
dictionary[] 
 []

[34]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 2137--2137
[]    \OT1/cmtt/m/n/12 Checks if predecessor dictionary has a cycle, j represen
ts the node[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2170--2170
[]    \OT1/cmtt/m/n/12 In label correcting check cycle it is decided pred has a
 cycle and[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2171--2171
[]    \OT1/cmtt/m/n/12 nodes in the cycle are labelled. We will create a list o
f nodes[] 
 []


Overfull \hbox (15.63864pt too wide) in paragraph at lines 2174--2174
[]    \OT1/cmtt/m/n/12 This method should be called from label[]correcting[]che
ck[]cycle(),[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2177--2177
[]    \OT1/cmtt/m/n/12 j: Node that predecessor is recently updated. We know th
at it is[] 
 []

[35]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 2237--2237
[]    \OT1/cmtt/m/n/12 Solves minimum cost feasible flow problem using network 
simplex[] 
 []


Overfull \hbox (17.36765pt too wide) in paragraph at lines 2238--2238
[]    \OT1/cmtt/m/n/12 algorithm. It is recommended to use min[]cost[]flow(algo
='simplex')[] 
 []


Overfull \hbox (19.09665pt too wide) in paragraph at lines 2239--2239
[]    \OT1/cmtt/m/n/12 instead of using network[]simplex() directly. Returns Tr
ue when an[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 2240--2240
[]    \OT1/cmtt/m/n/12 optimal solution is found, returns False otherwise. 'flo
w' attribute[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2241--2241
[]    \OT1/cmtt/m/n/12 values of arcs should be considered as junk when returne
d False.[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2248--2248
[]    \OT1/cmtt/m/n/12 root: Root node for the underlying spanning trees that w
ill be[] 
 []

[36]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 2313--2313
[]    \OT1/cmtt/m/n/12 Returns the tuple that represents leaving arc, capacity 
of the[] 
 []

[37] [38]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 2400--2400
[]    \OT1/cmtt/m/n/12 Prints all positive flows to stdout. This method can be 
used for[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2425--2425
[]    \OT1/cmtt/m/n/12 Returns a new graph instance that is same as self but ad
ds nodes[] 
 []

[39]
Overfull \hbox (25.27165pt too wide) in paragraph at lines 2493--2493
[]    \OT1/cmtt/m/n/12 pivot: May be one of the following; 'first[]eligible' or
 'dantzig'.[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2520--2520
[]    \OT1/cmtt/m/n/12 Checks if the current solution is optimal, if yes return
s True,[] 
 []

[40]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 2552--2552
[]    \OT1/cmtt/m/n/12 Assumes a feasible flow solution stored in 'flow' attrib
ute's of[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2584--2584
[]    \OT1/cmtt/m/n/12 At this point we assume that the solution does not have 
a cycle.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2585--2585
[]    \OT1/cmtt/m/n/12 We check if all the nodes are connected, if not we add a
n arc to[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2586--2586
[]    \OT1/cmtt/m/n/12 solution[]g that does not create a cycle and return True
. Otherwise[] 
 []


Overfull \hbox (19.09665pt too wide) in paragraph at lines 2593--2593
[]    \OT1/cmtt/m/n/12 (1) solution[]g is updated. An arc that does not create 
a cycle is[] 
 []

[41]
Overfull \hbox (2.30064pt too wide) in paragraph at lines 2621--2621
[]    \OT1/cmtt/m/n/12 Searches graph starting from source. Its difference from
 usual[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2622--2622
[]    \OT1/cmtt/m/n/12 search is we can also go backwards along an arc. When th
e graph[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2624--2624
[]    \OT1/cmtt/m/n/12 indexes and stores them as node attributes. These values
 should be[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2630--2630
[]    \OT1/cmtt/m/n/12 (1) Sets the component number of all reachable nodes to 
component.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2632--2632
[]    \OT1/cmtt/m/n/12 (2) Sets 'pred', 'thread' and 'depth' attributes of node
s. These[] 
 []

[42]
Overfull \hbox (27.00066pt too wide) in paragraph at lines 2689--2689
[]    \OT1/cmtt/m/n/12 Returns a cycle (list of nodes) if the graph has one, re
turns None[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2690--2690
[]    \OT1/cmtt/m/n/12 otherwise. Uses DFS. During DFS checks existence of arcs
 to lower[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2691--2691
[]    \OT1/cmtt/m/n/12 depth regions. Note that direction of the arcs are not i
mportant.[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2693--2693
[]    \OT1/cmtt/m/n/12 Returns list of nodes that represents cycle. Returns Non
e if the[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2718--2718
[]    \OT1/cmtt/m/n/12 Assumes a feasible flow solution stored in 'flow' attrib
ute's of[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2719--2719
[]    \OT1/cmtt/m/n/12 arcs. Returns the graph with arcs that have flow between
 0 and[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2750--2750
[]    \OT1/cmtt/m/n/12 Computes node potentials for a minimum cost flow problem
 and stores[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2751--2751
[]    \OT1/cmtt/m/n/12 them as node attribute 'potential'. Based on pseudocode 
given in[] 
 []

[43]
Overfull \hbox (14.65065pt too wide) in paragraph at lines 2818--2818
[]    \OT1/cmtt/m/n/12 Solves minimum cost flow problem using node/edge attribu
tes with[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2821--2821
[]    \OT1/cmtt/m/n/12 (1) Assumes a directed graph in which each arc has 'capa
city' and[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2823--2823
[]    \OT1/cmtt/m/n/12 (2) Nodes should have 'demand' attribute. This value sho
uld be[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2824--2824
[]    \OT1/cmtt/m/n/12 positive for supply and negative for demand, and 0 for t
ranshipment[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2827--2827
[]    \OT1/cmtt/m/n/12 (4) Assumes (i,j) and (j,i) does not exist together. Nee
ded when[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2828--2828
[]    \OT1/cmtt/m/n/12 solving max flow. (max flow problem is solved to get a f
easible[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2831--2831
[]    \OT1/cmtt/m/n/12 display: 'off' for no display, 'pygame' for live update 
of tree[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2833--2833
[]        \OT1/cmtt/m/n/12 display: display method, if not given current mode (
the one[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2835--2835
[]        \OT1/cmtt/m/n/12 algo: determines algorithm to use, can be one of the
 following[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 2839--2839
[]            \OT1/cmtt/m/n/12 see Network Flows by Ahuja et al. for details of
 algorithms.[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2840--2840
[]        \OT1/cmtt/m/n/12 pivot: valid if algo is 'simlex', determines pivotin
g rule for[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 2841--2841
[]            \OT1/cmtt/m/n/12 simplex, may be one of the following; 'first[]el
igible',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 2845--2845
[]        \OT1/cmtt/m/n/12 root: valid if algo is 'simlex', specifies the root 
node for[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2846--2846
[]            \OT1/cmtt/m/n/12 simplex algorithm. It is name of the one of the 
nodes. It[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2850--2850
[]    \OT1/cmtt/m/n/12 'distance' attribute of the nodes are also changed durin
g max flow[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2858--2858
[]        \OT1/cmtt/m/n/12 solves minimum cost feasible flow problem using cycl
e canceling[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 2861--2861
[]        \OT1/cmtt/m/n/12 solves minimum cost feasible flow problem using netw
ork simplex[] 
 []

[44]
Overfull \vbox (96.41997pt too high) has occurred while \output is active []


[45]
Overfull \hbox (42.06766pt too wide) in paragraph at lines 2884--2884
[]    \OT1/cmtt/m/n/12 random(self, numnodes = 10, degree[]range = None, length
[]range = None,[] 
 []


Overfull \hbox (31.44666pt too wide) in paragraph at lines 2891--2891
[]    \OT1/cmtt/m/n/12 degree[]range: A tuple that has lower and upper bounds o
f degree for[] 
 []


Overfull \hbox (12.92165pt too wide) in paragraph at lines 2893--2893
[]    \OT1/cmtt/m/n/12 length[]range: A tuple that has lower and upper bounds f
or 'cost'[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2897--2897
[]    \OT1/cmtt/m/n/12 edge[]format: Dictionary that specifies attribute values
 for edges.[] 
 []


Overfull \hbox (25.27165pt too wide) in paragraph at lines 2898--2898
[]    \OT1/cmtt/m/n/12 node[]format: Dictionary that specifies attribute values
 for nodes.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2899--2899
[]    \OT1/cmtt/m/n/12 Euclidean: Creates an Euclidean graph (Euclidean distanc
e between[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 2901--2901
[]    \OT1/cmtt/m/n/12 seedInput: Seed that will be used for random number gene
ration.[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 2931--2931
[]    \OT1/cmtt/m/n/12 This function was originally taken from here and modifie
d for this[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2932--2932
[]    \OT1/cmtt/m/n/12 graph class: http://code.google.com/p/python-graph/sourc
e/browse/[] 
 []


Overfull \hbox (6.74664pt too wide) in paragraph at lines 2937--2937
[]    \OT1/cmtt/m/n/12 min[]delta: Smallest variation required to have a new it
eration.[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 2941--2941
[]    \OT1/cmtt/m/n/12 Returns dictionary of page-ranks. Keys are node names, v
alues are[] 
 []

[46]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 2968--2968
[]    \OT1/cmtt/m/n/12 Returns a dictionary of node degrees. Keys are node name
s, values[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 2993--2993
[]    \OT1/cmtt/m/n/12 Returns diameter of the graph. Diameter is defined as fo
llows.[] 
 []


Overfull \hbox (33.63869pt too wide) in paragraph at lines 2996--2996
[]    \OT1/cmtt/m/n/12 diameter = $\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n e
ccentricity(n) = \OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 min []n \OMS/cmtt/m/n/12 n\
OT1/cmtt/m/n/12 max []m distance(n,m)$[] 
 []

[47]
Overfull \hbox (19.09665pt too wide) in paragraph at lines 3025--3025
[]    \OT1/cmtt/m/n/12 cluster[]attrs: Dictionary of cluster attributes, see Do
t language[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 3030--3030
[]    \OT1/cmtt/m/n/12 A cluster will be created. Attributes of the nodes in th
e cluster[] 
 []


Overfull \hbox (59.00017pt too wide) in paragraph at lines 3041--3042
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

[48] [49]
Overfull \hbox (72.59099pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 dfs(), dis-play(), edge[]to[]string(), fifo[]label[]correcting(
), find[]cycle[]capacity(), find[]feasible[]flow(),
 []


Overfull \hbox (1.50423pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 floyd[]warshall(), floyd[]warshall[]get[]cycle(), floyd[]warsha
ll[]get[]path(), get[]degree(),
 []


Overfull \hbox (84.69334pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 get[]node[]attr(), get[]node[]list(), get[]node[]num(), get[]ou
t[]neighbors(), get[]simplex[]solution[]graph(),
 []


Overfull \hbox (4.38948pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 bel[]strong[]component(), max[]flow(), max[]flow[]preflowpush()
, min[]cost[]flow(), min-
 []


Overfull \hbox (1.64784pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 i-mum[]spanning[]tree[]kruskal(), min-i-mum[]spanning[]tree[]pr
im(), net-work[]simplex(),
 []


Overfull \hbox (43.4774pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 page[]rank(), print[]flow(), pro-cess[]edge[]dijkstra(), pro-ce
ss[]edge[]flow(), pro-cess[]edge[]prim(),
 []


Overfull \hbox (62.49916pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 pro-cess[]edge[]search(), pro-cess[]node[]search(), ran-dom(), 
re-la-bel(), search(), set[]display[]mode(),
 []


Overfull \hbox (2.87505pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 set[]edge[]attr(), set[]layout(), set[]node[]attr(), show[]flow
(), sim-plex[]augment[]cycle(),
 []


Overfull \hbox (1.00813pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 sim-plex[]compute[]potentials(), sim-plex[]connect(), sim-plex[
]determine[]leaving[]arc(),
 []


Overfull \hbox (63.56969pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 sim-plex[]find[]cycle(), sim-plex[]find[]tree(), sim-plex[]iden
tify[]cycle(), sim-plex[]mark[]entering[]arc(),
 []


Overfull \hbox (35.97054pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 sim-plex[]mark[]leaving[]arc(), sim-plex[]mark[]st[]arcs(), sim
-plex[]optimal(), sim-plex[]redraw(),
 []


Overfull \hbox (24.88649pt too wide) in paragraph at lines 3217--3218
\OT1/cmr/m/n/12 sim-plex[]remove[]arc(), sim-plex[]search(), sim-plex[]select[]
entering[]arc(), strong[]connect(),
 []

[50]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 3223--3224
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

) [51] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.tex
Overfull \hbox (122.37866pt too wide) in paragraph at lines 50--51
\OT1/cmtt/m/n/12 '\OMS/cmtt/m/n/12 n\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/c
mtt/m/n/12 documentclass[landscape]\OMS/cmtt/m/n/12 f\OT1/cmtt/m/n/12 article\O
MS/cmtt/m/n/12 gn\OT1/cmtt/m/n/12 n\OMS/cmtt/m/n/12 nn\OT1/cmtt/m/n/12 usepacka
ge[x11n...|  
 []


Overfull \hbox (21.52051pt too wide) in paragraph at lines 68--69
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],]*$')|  
 []


Overfull \hbox (118.59155pt too wide) in paragraph at lines 71--72
\OT1/cmtt/m/n/12 re.compile(r'(?u)^[[]a-zA-Z][a-zA-Z0-9[],:"]*[a-zA-Z0-9[],"]..
.|  
 []

[52


] [53]
Overfull \hbox (8.47565pt too wide) in paragraph at lines 251--251
[]    \OT1/cmtt/m/n/12 Adds root node to the tree with name root and returns ro
ot Node[] 
 []

[54]
Overfull \hbox (33.17566pt too wide) in paragraph at lines 313--313
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 341--341
[]    \OT1/cmtt/m/n/12 Searches tree starting from node named root using breadt
h-first[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 342--342
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []

[55]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 373--373
[]    \OT1/cmtt/m/n/12 Traverses tree starting from node named root. Used strat
egy (BFS,[] 
 []


Overfull \hbox (27.00066pt too wide) in paragraph at lines 374--374
[]    \OT1/cmtt/m/n/12 DFS) is controlled by argument q. It is a DFS if q is Qu
eue(), BFS[] 
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 375--375
[]    \OT1/cmtt/m/n/12 if q is Stack(). Starts search from root argument if it 
is given.[] 
 []


Overfull \hbox (28.13728pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 play(), edge[]to[]string(), fifo[]label[]correcting(), find[]cy
cle[]capacity(), find[]feasible[]flow(),
 []


Overfull \hbox (1.50423pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 floyd[]warshall(), floyd[]warshall[]get[]cycle(), floyd[]warsha
ll[]get[]path(), get[]degree(),
 []


Overfull \hbox (84.69334pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 get[]node[]attr(), get[]node[]list(), get[]node[]num(), get[]ou
t[]neighbors(), get[]simplex[]solution[]graph(),
 []


Overfull \hbox (4.38948pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 bel[]strong[]component(), max[]flow(), max[]flow[]preflowpush()
, min[]cost[]flow(), min-
 []


Overfull \hbox (1.64784pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 i-mum[]spanning[]tree[]kruskal(), min-i-mum[]spanning[]tree[]pr
im(), net-work[]simplex(),
 []


Overfull \hbox (43.4774pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 page[]rank(), print[]flow(), pro-cess[]edge[]dijkstra(), pro-ce
ss[]edge[]flow(), pro-cess[]edge[]prim(),
 []


Overfull \hbox (62.49916pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 pro-cess[]edge[]search(), pro-cess[]node[]search(), ran-dom(), 
re-la-bel(), search(), set[]display[]mode(),
 []


Overfull \hbox (2.87505pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 set[]edge[]attr(), set[]layout(), set[]node[]attr(), show[]flow
(), sim-plex[]augment[]cycle(),
 []


Overfull \hbox (1.00813pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 sim-plex[]compute[]potentials(), sim-plex[]connect(), sim-plex[
]determine[]leaving[]arc(),
 []


Overfull \hbox (63.56969pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 sim-plex[]find[]cycle(), sim-plex[]find[]tree(), sim-plex[]iden
tify[]cycle(), sim-plex[]mark[]entering[]arc(),
 []


Overfull \hbox (35.97054pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 sim-plex[]mark[]leaving[]arc(), sim-plex[]mark[]st[]arcs(), sim
-plex[]optimal(), sim-plex[]redraw(),
 []


Overfull \hbox (24.88649pt too wide) in paragraph at lines 393--394
\OT1/cmr/m/n/12 sim-plex[]remove[]arc(), sim-plex[]search(), sim-plex[]select[]
entering[]arc(), strong[]connect(),
 []

[56]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 399--400
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []


Overfull \hbox (20.82565pt too wide) in paragraph at lines 486--486
[]    \OT1/cmtt/m/n/12 attrs: Tree attributes in keyword arguments format. See 
Graph and[] 
 []

[57] [58]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 597--597
[]    \OT1/cmtt/m/n/12 Returns right child of node n. n can be Node() instance 
or string[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 627--627
[]    \OT1/cmtt/m/n/12 Returns left child of node n. n can be Node() instance o
r string[] 
 []

[59]
Overfull \hbox (12.92165pt too wide) in paragraph at lines 681--681
[]\OT1/cmtt/m/n/12 API: print[]nodes(self, order = 'in', priority = 'L', displa
y = None,[] 
 []


Overfull \hbox (2.30064pt too wide) in paragraph at lines 684--684
[]    \OT1/cmtt/m/n/12 A recursive function that prints nodes to stdout startin
g from[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 687--687
[]    \OT1/cmtt/m/n/12 order: Order of printing. Acceptable arguments are 'pre'
, 'in',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 689--689
[]    \OT1/cmtt/m/n/12 priority: Priority of printing, acceptable arguments are
 'L' and[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 713--713
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []


Overfull \hbox (8.47565pt too wide) in paragraph at lines 741--741
[]    \OT1/cmtt/m/n/12 Searches tree starting from node named root using breadt
h-first[] 
 []


Overfull \hbox (33.17566pt too wide) in paragraph at lines 742--742
[]    \OT1/cmtt/m/n/12 strategy if root argument is provided. Starts search fro
m root node[] 
 []

[60]
Overfull \hbox (20.82565pt too wide) in paragraph at lines 768--768
[]\OT1/cmtt/m/n/12 API: traverse(self, root=None, display=None, q=Stack(), prio
rity='L',[] 
 []


Overfull \hbox (14.65065pt too wide) in paragraph at lines 771--771
[]    \OT1/cmtt/m/n/12 Traverses tree starting from node named root if root arg
ument is[] 
 []


Overfull \hbox (39.35066pt too wide) in paragraph at lines 772--772
[]    \OT1/cmtt/m/n/12 provided. Starts search from root node of the tree other
wise. Search[] 
 []


Overfull \hbox (56.93755pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 ate[]cluster(), cre-ate[]residual[]graph(), cy-cle[]canceling()
, del[]edge(), dis-play(), edge[]to[]string(),
 []


Overfull \hbox (2.71837pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 get[]edge[]attr(), get[]edge[]cost(), get[]edge[]list(), get[]e
dge[]num(), get[]in[]neighbors(),
 []


Overfull \hbox (58.08641pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 get[]layout(), get[]negative[]cycle(), get[]neighbors(), get[]n
ode(), get[]node[]attr(), get[]node[]list(),
 []


Overfull \hbox (26.3748pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 get[]node[]num(), get[]out[]neighbors(), get[]simplex[]solution
[]graph(), la-bel[]components(),
 []


Overfull \hbox (14.16798pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 la-bel[]correcting[]check[]cycle(), la-bel[]correcting[]get[]cy
cle(), la-bel[]strong[]component(),
 []


Overfull \hbox (29.31227pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 max[]flow(), max[]flow[]preflowpush(), min[]cost[]flow(), min-i
-mum[]spanning[]tree[]kruskal(),
 []


Overfull \hbox (10.1208pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 cess[]edge[]dijkstra(), pro-cess[]edge[]flow(), pro-cess[]edge[
]prim(), pro-cess[]edge[]search(),
 []


Overfull \hbox (27.77174pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 pro-cess[]node[]search(), ran-dom(), re-la-bel(), search(), set
[]display[]mode(), set[]edge[]attr(),
 []


Overfull \hbox (78.98814pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 set[]layout(), set[]node[]attr(), show[]flow(), sim-plex[]augme
nt[]cycle(), sim-plex[]compute[]potentials(),
 []


Overfull \hbox (53.4648pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]connect(), sim-plex[]determine[]leaving[]arc(), sim-p
lex[]find[]cycle(), sim-plex[]find[]tree(),
 []


Overfull \hbox (5.62975pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]mark[]st[]arcs(), sim-plex[]optimal(), sim-plex[]redr
aw(), sim-plex[]remove[]arc(),
 []


Overfull \hbox (16.02187pt too wide) in paragraph at lines 825--826
\OT1/cmr/m/n/12 sim-plex[]search(), sim-plex[]select[]entering[]arc(), strong[]
connect(), tar-jan(), to[]string(),
 []

[61]
Overfull \hbox (59.00017pt too wide) in paragraph at lines 831--832
[][][]\OT1/cmr/m/n/12 delattr[][](), [][]format[][](), [][]getattribute[][](), 
[][]hash[][](), [][]new[][](), [][]reduce[][](), [][]reduce[]ex[][](),
 []

) [62] (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.ind
Overfull \hbox (2.53183pt too wide) in paragraph at lines 5--7
[]| \OT1/cmr/m/n/12 coinor.gimpy.global[]constants \OT1/cmr/m/it/12 (mod-ule)\O
T1/cmr/m/n/12 ,
 []

[63



])
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 124.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 124.
 (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\api.aux
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.global_constants-module.au
x) (C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.graph-module.aux)
(C:\cygwin\home\ted\COIN\GiMPy\docs\pdf\coinor.gimpy.tree-module.aux))
Package atveryend Info: Empty hook `AtVeryEndDocument' on input line 124.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 124.
Package rerunfilecheck Info: File `api.out' has not changed.
(rerunfilecheck)             Checksum: 2316EC5A6F736BDD317E29DC154EC3CA;2142.


LaTeX Font Warning: Some font shapes were not available, defaults substituted.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 124.
 ) 
Here is how much of TeX's memory you used:
 5759 strings out of 494046
 87735 string characters out of 3148412
 182742 words of memory out of 3000000
 8943 multiletter control sequences out of 15000+200000
 13889 words of font info for 53 fonts, out of 3000000 for 9000
 715 hyphenation exceptions out of 8191
 32i,12n,43p,1736b,452s stack positions out of 5000i,500n,10000p,200000b,50000s

Output written on api.dvi (63 pages, 214448 bytes).
